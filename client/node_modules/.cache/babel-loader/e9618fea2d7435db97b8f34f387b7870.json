{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfile/pawfilepage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from '../navbar';\nimport Footer from '../footer';\nimport Sidebar from './sidebar';\nimport MainSection from './main-section';\nimport PawfileForm from '../home/pawfile-form';\nimport MedicalForm from './medical-form';\nimport MemoryForm from './memory-form';\nimport { Redirect } from 'react-router-dom';\nimport { showMedicalForm, showMemoryForm, changeSearchTerm, changeCategoryFilter, changeCurrentPetId, fetchIndividualPawfile, changeIndividualPawfilePending } from '../../actions/index';\nexport var PawfilePage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PawfilePage, _React$Component);\n\n  function PawfilePage() {\n    _classCallCheck(this, PawfilePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PawfilePage).apply(this, arguments));\n  }\n\n  _createClass(PawfilePage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('mounting pawfilepage');\n      this.props.dispatch(changeCurrentPetId(this.props.match.params.pawfileId));\n      this.props.dispatch(fetchIndividualPawfile(this.props.match.params.pawfileId));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      //set everything back to default when this component ummounts\n      this.props.dispatch(changeCurrentPetId(undefined));\n      this.props.dispatch(showMedicalForm(false));\n      this.props.dispatch(showMemoryForm(false));\n      this.props.dispatch(changeSearchTerm(\"\"));\n      this.props.dispatch(changeCategoryFilter(\"\"));\n      this.props.dispatch(changeIndividualPawfilePending(true));\n    } //I no longer need to check validId this way.\n\n  }, {\n    key: \"validId\",\n    value: function validId(paramsId) {\n      console.log('paramsId in the fn is', paramsId, 'length of pawfiles', this.props.pawfiles.length); //  this.props.pawfiles.map(pawfile=> console.log(pawfile.id == paramsId))\n\n      return this.props.pawfiles.find(function (pawfile) {\n        return pawfile.id == paramsId;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('props in pawfilepage are', this.props);\n      console.log('paramId in render is', this.props.match.params.pawfileId); // console.log('the return value of fn validId is', this.validId(this.props.match.params.pawfileId))\n      //if user is trying to access a pet that no longer exists or never did: \n      // if(!this.validId(this.props.match.params.pawfileId)){\n\n      console.log('invalid id', this.props.match.params.pawfileId); // return <Redirect to=\"/home\" /> \n      // }\n\n      if (this.props.pawfilesPending) {\n        console.log('pending pawfilepage');\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Pending\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"pawfile-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(Sidebar, {\n        id: this.props.match.params.pawfileId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(MainSection, {\n        id: this.props.match.params.pawfileId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), this.props.showPawfileForm && React.createElement(PawfileForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), this.props.showMedicalForm && React.createElement(MedicalForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), this.props.showMemoryForm && React.createElement(MemoryForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PawfilePage;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    showPawfileForm: state.pawfile.showPawfileForm,\n    showMedicalForm: state.pawfile.showMedicalForm,\n    showMemoryForm: state.pawfile.showMemoryForm,\n    pawfilesPending: state.pawfile.pawfilesPending\n  };\n};\n\nexport default connect(mapStateToProps)(PawfilePage); //still problematic bc unless homepage fetched the data, we have to refetch it on pawfile page. cant depend on homepage","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfile/pawfilepage.js"],"names":["React","connect","Navbar","Footer","Sidebar","MainSection","PawfileForm","MedicalForm","MemoryForm","Redirect","showMedicalForm","showMemoryForm","changeSearchTerm","changeCategoryFilter","changeCurrentPetId","fetchIndividualPawfile","changeIndividualPawfilePending","PawfilePage","console","log","props","dispatch","match","params","pawfileId","undefined","paramsId","pawfiles","length","find","pawfile","id","pawfilesPending","showPawfileForm","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,eAAR,EAAyBC,cAAzB,EAAyCC,gBAAzC,EAA2DC,oBAA3D,EAAiFC,kBAAjF,EAAqGC,sBAArG,EAA6HC,8BAA7H,QAAkK,qBAAlK;AAGA,WAAaC,WAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCACqB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,WAAKC,KAAL,CAAWC,QAAX,CAAoBP,kBAAkB,CAAC,KAAKM,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzB,CAAtC;AACA,WAAKJ,KAAL,CAAWC,QAAX,CAAoBN,sBAAsB,CAAC,KAAKK,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzB,CAA1C;AACD;AALH;AAAA;AAAA,2CAOwB;AACpB;AACA,WAAKJ,KAAL,CAAWC,QAAX,CAAoBP,kBAAkB,CAACW,SAAD,CAAtC;AACA,WAAKL,KAAL,CAAWC,QAAX,CAAoBX,eAAe,CAAC,KAAD,CAAnC;AACA,WAAKU,KAAL,CAAWC,QAAX,CAAoBV,cAAc,CAAC,KAAD,CAAlC;AACA,WAAKS,KAAL,CAAWC,QAAX,CAAoBT,gBAAgB,CAAC,EAAD,CAApC;AACA,WAAKQ,KAAL,CAAWC,QAAX,CAAoBR,oBAAoB,CAAC,EAAD,CAAxC;AACA,WAAKO,KAAL,CAAWC,QAAX,CAAoBL,8BAA8B,CAAC,IAAD,CAAlD;AACD,KAfH,CAiBE;;AAjBF;AAAA;AAAA,4BAkBUU,QAlBV,EAkBmB;AACfR,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCO,QAArC,EAA+C,oBAA/C,EAAqE,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAAzF,EADe,CAEf;;AACA,aAAO,KAAKR,KAAL,CAAWO,QAAX,CAAoBE,IAApB,CAAyB,UAAAC,OAAO;AAAA,eAAGA,OAAO,CAACC,EAAR,IAAYL,QAAf;AAAA,OAAhC,CAAP;AACD;AAtBH;AAAA;AAAA,6BAwBU;AACNR,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,KAAKC,KAA7C;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAA5D,EAFM,CAGN;AAEA;AACA;;AACEN,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAAlD,EAPI,CAQJ;AACF;;AAEA,UAAG,KAAKJ,KAAL,CAAWY,eAAd,EAA8B;AAC5Bd,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAE,KAAKC,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWE,KAAX,CAAiBC,MAAjB,CAAwBC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIG,KAAKJ,KAAL,CAAWa,eAAX,IAA8B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJjC,EAKG,KAAKb,KAAL,CAAWV,eAAX,IAA8B,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALjC,EAMG,KAAKU,KAAL,CAAWT,cAAX,IAA6B,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANhC,EAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADF;AAWD;AAnDH;;AAAA;AAAA,EAAiCX,KAAK,CAACkC,SAAvC;;AAsDA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCH,IAAAA,eAAe,EAAEG,KAAK,CAACN,OAAN,CAAcG,eADC;AAEhCvB,IAAAA,eAAe,EAAE0B,KAAK,CAACN,OAAN,CAAcpB,eAFC;AAGhCC,IAAAA,cAAc,EAAEyB,KAAK,CAACN,OAAN,CAAcnB,cAHE;AAIhCqB,IAAAA,eAAe,EAAEI,KAAK,CAACN,OAAN,CAAcE;AAJC,GAAL;AAAA,CAA7B;;AAOA,eAAe/B,OAAO,CAACkC,eAAD,CAAP,CAAyBlB,WAAzB,CAAf,C,CAEA","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Navbar from '../navbar';\nimport Footer from '../footer'\nimport Sidebar from './sidebar';\nimport MainSection from './main-section';\nimport PawfileForm from '../home/pawfile-form';\nimport MedicalForm from './medical-form'\nimport MemoryForm from './memory-form'\nimport {Redirect} from 'react-router-dom'\nimport {showMedicalForm, showMemoryForm, changeSearchTerm, changeCategoryFilter, changeCurrentPetId, fetchIndividualPawfile, changeIndividualPawfilePending} from '../../actions/index';\n\n\nexport class PawfilePage extends React.Component{\n  componentDidMount(){\n    console.log('mounting pawfilepage');\n    this.props.dispatch(changeCurrentPetId(this.props.match.params.pawfileId));\n    this.props.dispatch(fetchIndividualPawfile(this.props.match.params.pawfileId))\n  }\n\n  componentWillUnmount(){\n    //set everything back to default when this component ummounts\n    this.props.dispatch(changeCurrentPetId(undefined));\n    this.props.dispatch(showMedicalForm(false));\n    this.props.dispatch(showMemoryForm(false));\n    this.props.dispatch(changeSearchTerm(\"\"));\n    this.props.dispatch(changeCategoryFilter(\"\"));\n    this.props.dispatch(changeIndividualPawfilePending(true));\n  }\n\n  //I no longer need to check validId this way.\n  validId(paramsId){\n    console.log('paramsId in the fn is', paramsId, 'length of pawfiles', this.props.pawfiles.length);\n    //  this.props.pawfiles.map(pawfile=> console.log(pawfile.id == paramsId))\n    return this.props.pawfiles.find(pawfile=> pawfile.id==paramsId)\n  }\n\n  render(){\n    console.log('props in pawfilepage are', this.props)\n    console.log('paramId in render is', this.props.match.params.pawfileId)\n    // console.log('the return value of fn validId is', this.validId(this.props.match.params.pawfileId))\n\n    //if user is trying to access a pet that no longer exists or never did: \n    // if(!this.validId(this.props.match.params.pawfileId)){\n      console.log('invalid id', this.props.match.params.pawfileId);\n      // return <Redirect to=\"/home\" /> \n    // }\n    \n    if(this.props.pawfilesPending){\n      console.log('pending pawfilepage');\n      return <p>Pending</p>\n    }\n\n    return(\n      <div className=\"pawfile-page\">\n        <Navbar/>\n        <Sidebar id={this.props.match.params.pawfileId}/>\n        <MainSection id={this.props.match.params.pawfileId}/>\n        {this.props.showPawfileForm && <PawfileForm/>} \n        {this.props.showMedicalForm && <MedicalForm/>} \n        {this.props.showMemoryForm && <MemoryForm/>}\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  showPawfileForm: state.pawfile.showPawfileForm,\n  showMedicalForm: state.pawfile.showMedicalForm,\n  showMemoryForm: state.pawfile.showMemoryForm,\n  pawfilesPending: state.pawfile.pawfilesPending,\n});\n\nexport default connect(mapStateToProps)(PawfilePage);\n\n//still problematic bc unless homepage fetched the data, we have to refetch it on pawfile page. cant depend on homepage "]},"metadata":{},"sourceType":"module"}