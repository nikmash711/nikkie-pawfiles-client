{"ast":null,"code":"import { API_BASE_URL } from '../config';\n/* POST & PUT ACTIONS */\n\nexport var SUBMIT_REMINDER_REQUEST = \"SUBMIT_REMINDER_REQUEST\";\nexport var submitReminderRequest = function submitReminderRequest() {\n  return {\n    type: SUBMIT_REMINDER_REQUEST\n  };\n};\nexport var SUBMIT_REMINDER_SUCCESS = \"SUBMIT_REMINDER_SUCCESS\";\nexport var submitReminderSuccess = function submitReminderSuccess(pawfile, currentPetId) {\n  return {\n    type: SUBMIT_REMINDER_SUCCESS,\n    pawfile: pawfile,\n    currentPetId: currentPetId\n  };\n};\nexport var CRUD_ERROR = \"CRUD_ERROR\";\nexport var crudError = function crudError() {\n  return {\n    type: CRUD_ERROR\n  };\n};\nexport var submitReminder = function submitReminder(values, currentPetId) {\n  return function (dispatch) {\n    dispatch(submitReminderRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/reminders/\").concat(currentPetId), {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      return res.json();\n    }).then(function (pawfile) {\n      console.log('in actions, got back pawfile:', pawfile);\n      dispatch(submitReminderSuccess(pawfile, currentPetId));\n    }).catch(function (err) {\n      dispatch(crudError(err));\n    });\n  };\n};\n/* DELETE */\n\nexport var DELETE_REMINDER_SUCCESS = 'DELETE_REMINDER_SUCCESS';\nexport var deleteReminderSuccess = function deleteReminderSuccess(currentPetId, reminderId) {\n  return {\n    type: DELETE_REMINDER_SUCCESS,\n    currentPetId: currentPetId,\n    reminderId: reminderId\n  };\n};\nexport var DELETE_REMINDER_REQUEST = \"DELETE_REMINDER_REQUEST\";\nexport var deleteReminderRequest = function deleteReminderRequest() {\n  return {\n    type: DELETE_REMINDER_REQUEST\n  };\n};\nexport var deleteReminder = function deleteReminder(currentPetId, reminderId) {\n  return function (dispatch) {\n    console.log('in delete reminder action, deleting reminder with id', reminderId, 'in pet with id', currentPetId);\n    dispatch(deleteReminderRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/reminders/\").concat(currentPetId, \"/\").concat(reminderId), {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      console.log(\"HERE\");\n      console.log('successful deleting');\n      dispatch(deleteReminderSuccess(currentPetId));\n    }).catch(function (err) {\n      dispatch(crudError(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/actions/reminder-crud.js"],"names":["API_BASE_URL","SUBMIT_REMINDER_REQUEST","submitReminderRequest","type","SUBMIT_REMINDER_SUCCESS","submitReminderSuccess","pawfile","currentPetId","CRUD_ERROR","crudError","submitReminder","values","dispatch","fetch","method","headers","body","JSON","stringify","then","res","ok","Promise","reject","statusText","json","console","log","catch","err","DELETE_REMINDER_SUCCESS","deleteReminderSuccess","reminderId","DELETE_REMINDER_REQUEST","deleteReminderRequest","deleteReminder"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from '../config';\n\n/* POST & PUT ACTIONS */\nexport const SUBMIT_REMINDER_REQUEST = \"SUBMIT_REMINDER_REQUEST\";\nexport const submitReminderRequest = () => ({\n    type: SUBMIT_REMINDER_REQUEST,\n})\n\nexport const SUBMIT_REMINDER_SUCCESS = \"SUBMIT_REMINDER_SUCCESS\";\nexport const submitReminderSuccess = (pawfile, currentPetId) => ({\n    type: SUBMIT_REMINDER_SUCCESS,\n    pawfile,\n    currentPetId\n})\n\nexport const CRUD_ERROR = \"CRUD_ERROR\";\nexport const crudError = () => ({\n  type: CRUD_ERROR,\n})\n\nexport const submitReminder = (values, currentPetId) => dispatch =>{\n\n    dispatch(submitReminderRequest());\n    fetch(`${API_BASE_URL}/reminders/${currentPetId}`, { \n        method: \"POST\",\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values)\n    })\n    .then(res => {\n        if (!res.ok) {\n            return Promise.reject(res.statusText);\n        }\n        return res.json();\n    }).then(pawfile => {\n        console.log('in actions, got back pawfile:', pawfile);\n        dispatch(submitReminderSuccess(pawfile, currentPetId));\n    }).catch(err => {\n        dispatch(crudError(err));\n    });\n}\n\n/* DELETE */\nexport const DELETE_REMINDER_SUCCESS = 'DELETE_REMINDER_SUCCESS';\nexport const deleteReminderSuccess = (currentPetId, reminderId) => ({\n    type: DELETE_REMINDER_SUCCESS,\n    currentPetId,\n    reminderId\n});\n\nexport const DELETE_REMINDER_REQUEST = \"DELETE_REMINDER_REQUEST\";\nexport const deleteReminderRequest = () => ({\n    type: DELETE_REMINDER_REQUEST,\n})\n\nexport const deleteReminder = (currentPetId, reminderId) => dispatch =>{\n    console.log('in delete reminder action, deleting reminder with id', reminderId, 'in pet with id', currentPetId);\n    dispatch(deleteReminderRequest());\n    fetch(`${API_BASE_URL}/reminders/${currentPetId}/${reminderId}`, { \n        method: \"DELETE\",\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if (!res.ok) {\n            return Promise.reject(res.statusText);\n        }\n        console.log(\"HERE\");\n        console.log('successful deleting');\n        dispatch(deleteReminderSuccess(currentPetId));\n    })\n    .catch(err => {\n        dispatch(crudError(err));\n    });\n  }"]},"metadata":{},"sourceType":"module"}