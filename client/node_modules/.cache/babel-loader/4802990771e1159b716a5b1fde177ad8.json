{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfile/reminder-blurb.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Reminder from './reminder';\nimport { addingNewReminder } from '../../actions/index';\nimport './reminder-blurb.css';\nexport var ReminderBlurb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReminderBlurb, _React$Component);\n\n  function ReminderBlurb(props) {\n    var _this;\n\n    _classCallCheck(this, ReminderBlurb);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReminderBlurb).call(this, props));\n    _this.state = {\n      showMoreOptions: false\n    };\n    return _this;\n  }\n\n  _createClass(ReminderBlurb, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var values = {\n        note: this.noteInput.value\n      };\n      this.props.dispatch(addingNewReminder(values));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var reminders = this.props.reminders.map(function (reminder, index) {\n        return React.createElement(Reminder, Object.assign({\n          key: index\n        }, reminder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"article\", {\n        className: \"blurb reminders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Reminders\"), React.createElement(\"ul\", {\n        className: \"reminders-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, reminders, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"new-reminder-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"new-reminder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"new-reminder-note\",\n        ref: function ref(input) {\n          return _this2.noteInput = input;\n        },\n        type: \"text\",\n        id: \"new-reminder\",\n        name: \"note\",\n        placeholder: \"Start typing...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"more-options-button\",\n        onClick: function onClick() {\n          return _this2.setState({\n            showMoreOptions: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"More options\"), React.createElement(\"div\", {\n        className: \"more-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Testing\")), React.createElement(\"button\", {\n        className: \"add-reminder-button\",\n        type: \"submit\",\n        onClick: function onClick(e) {\n          return _this2.onSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return ReminderBlurb;\n}(React.Component);\nexport default connect()(ReminderBlurb);","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfile/reminder-blurb.js"],"names":["React","connect","Link","Reminder","addingNewReminder","ReminderBlurb","props","state","showMoreOptions","e","preventDefault","values","note","noteInput","value","dispatch","reminders","map","reminder","index","input","setState","onSubmit","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AAEA,OAAO,sBAAP;AAEA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAEE,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAW;AACTC,MAAAA,eAAe,EAAE;AADR,KAAX;AAHgB;AAMjB;;AARH;AAAA;AAAA,6BAUWC,CAVX,EAUa;AACTA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAC;AAACC,QAAAA,IAAI,EAAE,KAAKC,SAAL,CAAeC;AAAtB,OAAb;AACA,WAAKR,KAAL,CAAWS,QAAX,CAAoBX,iBAAiB,CAACO,MAAD,CAArC;AACD;AAdH;AAAA;AAAA,6BAeU;AAAA;;AAEN,UAAMK,SAAS,GAAG,KAAKV,KAAL,CAAWU,SAAX,CAAqBC,GAArB,CAAyB,UAACC,QAAD,EAAWC,KAAX;AAAA,eACzC,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA;AAAf,WAA0BD,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADyC;AAAA,OAAzB,CAAlB;AAIA,aACE;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAI,QAAA,SAAS,EAAG,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,SADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAO,QAAA,SAAS,EAAC,mBAAjB;AAAqC,QAAA,GAAG,EAAE,aAAAI,KAAK;AAAA,iBAAI,MAAI,CAACP,SAAL,GAAiBO,KAArB;AAAA,SAA/C;AAA2E,QAAA,IAAI,EAAC,MAAhF;AAAuF,QAAA,EAAE,EAAC,cAA1F;AAAyG,QAAA,IAAI,EAAC,MAA9G;AAAqH,QAAA,WAAW,EAAC,iBAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,qBAAhC;AAAsD,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAACb,YAAAA,eAAe,EAAE;AAAlB,WAAd,CAAJ;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,EAME;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CANF,EAUE;AAAQ,QAAA,SAAS,EAAC,qBAAlB;AAAwC,QAAA,IAAI,EAAC,QAA7C;AAAsD,QAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,iBAAK,MAAI,CAACa,QAAL,CAAcb,CAAd,CAAL;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAVF,CADA,CAFF,CAFF,CADF;AA0BD;AA/CH;;AAAA;AAAA,EAAmCT,KAAK,CAACuB,SAAzC;AAmDA,eAAetB,OAAO,GAAGI,aAAH,CAAtB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport Reminder from './reminder';\nimport {addingNewReminder} from '../../actions/index';\n\nimport './reminder-blurb.css';\n\nexport class ReminderBlurb extends React.Component{\n\n  constructor(props){\n    super(props)\n\n    this.state={\n      showMoreOptions: false,\n    }\n  }\n\n  onSubmit(e){\n    e.preventDefault();\n    const values={note: this.noteInput.value};\n    this.props.dispatch(addingNewReminder(values));\n  }\n  render(){\n\n    const reminders = this.props.reminders.map((reminder, index)=>(\n      <Reminder key={index} {...reminder}/>\n    ));\n  \n    return(\n      <article className=\"blurb reminders\">\n        <h2>Reminders</h2>\n        <ul className = \"reminders-list\">\n          {reminders}\n          <li>\n          <form className=\"new-reminder-form\">\n            <label htmlFor=\"new-reminder\"></label>\n            <input className=\"new-reminder-note\" ref={input => this.noteInput = input} type=\"text\" id=\"new-reminder\" name=\"note\" placeholder=\"Start typing...\"/>\n\n            <button type=\"button\" className=\"more-options-button\" onClick={()=>this.setState({showMoreOptions: true})}>More options</button>\n\n            <div className=\"more-options\">\n              <p>Testing</p>\n            </div>\n\n            <button className=\"add-reminder-button\" type=\"submit\" onClick={(e)=>this.onSubmit(e)}>Add</button>\n            {/* Have the time/date option be hidden unless user clicks a button that says time/date, then display visible and keep the values and submit with form  */}\n            {/* <input type=\"date\" />\n            <input type=\"time\" /> */}\n        </form>\n          </li>\n        </ul>\n      </article>\n    );\n\n  }\n  \n}\n\nexport default connect()(ReminderBlurb);"]},"metadata":{},"sourceType":"module"}