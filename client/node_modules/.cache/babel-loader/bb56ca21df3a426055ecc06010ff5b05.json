{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfilepage/reminder-blurb.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Reminder from './reminder';\nimport { submitReminder } from '../../actions/reminder-crud';\nimport { todaysDate } from '../helper-functions';\nimport './reminder-blurb.css';\nexport var ReminderBlurb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReminderBlurb, _React$Component);\n\n  function ReminderBlurb() {\n    _classCallCheck(this, ReminderBlurb);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReminderBlurb).apply(this, arguments));\n  }\n\n  _createClass(ReminderBlurb, [{\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var values = {\n        note: this.noteInput.value,\n        date: this.dateInput.value\n      };\n      this.props.dispatch(submitReminder(values, this.props.id));\n      this.noteInput.value = \"\";\n      this.dateInput.value = \"\";\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var reminders = this.props.reminders.map(function (reminder, index) {\n        return React.createElement(Reminder, Object.assign({\n          reminderId: reminder.id,\n          key: index\n        }, reminder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"article\", {\n        className: \"blurb reminders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Reminders\"), React.createElement(\"ul\", {\n        className: \"reminders-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, reminders, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"new-reminder-form reminder\",\n        onSubmit: function onSubmit(e) {\n          return _this.onSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        className: \"new-reminder-note reminder-note\",\n        ref: function ref(input) {\n          return _this.noteInput = input;\n        },\n        type: \"text\",\n        id: \"new-reminder\",\n        name: \"note\",\n        placeholder: \"New reminder...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        required: true,\n        className: \"reminder-date\",\n        ref: function ref(input) {\n          return _this.dateInput = input;\n        },\n        type: \"date\",\n        defaultValue: todaysDate(),\n        min: todaysDate(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"add-reminder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Add\")))));\n    }\n  }]);\n\n  return ReminderBlurb;\n}(React.Component);\nexport default connect()(ReminderBlurb);","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfilepage/reminder-blurb.js"],"names":["React","connect","Reminder","submitReminder","todaysDate","ReminderBlurb","e","preventDefault","values","note","noteInput","value","date","dateInput","props","dispatch","id","reminders","map","reminder","index","onSubmit","input","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,cAAR,QAA6B,6BAA7B;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAO,sBAAP;AAEA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEWC,CAFX,EAEa;AACTA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,MAAM,GAAC;AAACC,QAAAA,IAAI,EAAE,KAAKC,SAAL,CAAeC,KAAtB;AAA6BC,QAAAA,IAAI,EAAE,KAAKC,SAAL,CAAeF;AAAlD,OAAb;AACA,WAAKG,KAAL,CAAWC,QAAX,CAAoBZ,cAAc,CAACK,MAAD,EAAS,KAAKM,KAAL,CAAWE,EAApB,CAAlC;AACA,WAAKN,SAAL,CAAeC,KAAf,GAAuB,EAAvB;AACA,WAAKE,SAAL,CAAeF,KAAf,GAAqB,EAArB;AACD;AARH;AAAA;AAAA,6BAUU;AAAA;;AACN,UAAMM,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAAX,CAAqBC,GAArB,CAAyB,UAACC,QAAD,EAAWC,KAAX;AAAA,eACzC,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAED,QAAQ,CAACH,EAA/B;AAAmC,UAAA,GAAG,EAAEI;AAAxC,WAAmDD,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADyC;AAAA,OAAzB,CAAlB;AAIA,aACE;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAI,QAAA,SAAS,EAAG,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,SADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAA6C,QAAA,QAAQ,EAAG,kBAACX,CAAD;AAAA,iBAAM,KAAI,CAACe,QAAL,CAAcf,CAAd,CAAN;AAAA,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,SAAS,EAAC,iCAA1B;AAA4D,QAAA,GAAG,EAAE,aAAAgB,KAAK;AAAA,iBAAI,KAAI,CAACZ,SAAL,GAAiBY,KAArB;AAAA,SAAtE;AAAkG,QAAA,IAAI,EAAC,MAAvG;AAA8G,QAAA,EAAE,EAAC,cAAjH;AAAgI,QAAA,IAAI,EAAC,MAArI;AAA4I,QAAA,WAAW,EAAC,iBAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,SAAS,EAAC,eAA1B;AAA0C,QAAA,GAAG,EAAE,aAAAA,KAAK;AAAA,iBAAI,KAAI,CAACT,SAAL,GAAiBS,KAArB;AAAA,SAApD;AAAgF,QAAA,IAAI,EAAC,MAArF;AAA4F,QAAA,YAAY,EAAElB,UAAU,EAApH;AAAwH,QAAA,GAAG,EAAEA,UAAU,EAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,cAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF,CAFF,CAFF,CADF;AA4BD;AA3CH;;AAAA;AAAA,EAAmCJ,KAAK,CAACuB,SAAzC;AA8CA,eAAetB,OAAO,GAAGI,aAAH,CAAtB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Reminder from './reminder';\nimport {submitReminder} from '../../actions/reminder-crud';\nimport {todaysDate} from '../helper-functions';\nimport './reminder-blurb.css';\n\nexport class ReminderBlurb extends React.Component{\n\n  onSubmit(e){\n    e.preventDefault();\n    const values={note: this.noteInput.value, date: this.dateInput.value};\n    this.props.dispatch(submitReminder(values, this.props.id));\n    this.noteInput.value = \"\";\n    this.dateInput.value=\"\";\n  }\n  \n  render(){\n    const reminders = this.props.reminders.map((reminder, index)=>(\n      <Reminder reminderId={reminder.id} key={index} {...reminder}/>\n    ));\n\n    return(\n      <article className=\"blurb reminders\">\n        <h2>Reminders</h2>\n        <ul className = \"reminders-list\">\n          {reminders}\n          <li>\n            <form className=\"new-reminder-form reminder\" onSubmit={ (e)=> this.onSubmit(e)}>\n              <input required className=\"new-reminder-note reminder-note\" ref={input => this.noteInput = input} type=\"text\" id=\"new-reminder\" name=\"note\" placeholder=\"New reminder...\"/>\n              <input required className=\"reminder-date\" ref={input => this.dateInput = input} type=\"date\" defaultValue={todaysDate()} min={todaysDate()}/>\n              <button type=\"submit\" className=\"add-reminder\">Add</button>\n\n              {/* <button type=\"button\" className=\"more-options-button\" onClick={()=>this.toggleMoreOptions()}>More options</button> */}\n\n              {/* {this.state.showMoreOptions && \n              <div className=\"more-options\">\n                <input ref={input => this.dateInput = input} type=\"date\" max={todaysDate()}/>\n              </div>\n              } */}\n\n              {/* <button className=\"add-reminder-button\" type=\"submit\" onClick={(e)=>this.onSubmit(e)}>Add</button> */}\n              {/* Have the time/date option be hidden unless user clicks a button that says time/date, then display visible and keep the values and submit with form  */}\n              {/* <input type=\"date\" />\n              <input type=\"time\" /> */}\n            </form>\n          </li>\n        </ul>\n      </article>\n    );\n  }\n}\n\nexport default connect()(ReminderBlurb);"]},"metadata":{},"sourceType":"module"}