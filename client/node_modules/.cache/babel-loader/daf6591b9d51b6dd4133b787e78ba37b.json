{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfile/memory-form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, Fieldset, SubmissionError, focus } from 'redux-form';\nimport Input from '../input';\nimport { submitMemoryForm, showMemoryForm } from '../../actions/index';\nimport { required, nonEmpty } from '../validators';\nimport { stringToArrayList } from '../helper-functions';\nimport '.././home/pawfile-form.css';\nexport var MemoryForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MemoryForm, _React$Component);\n\n  function MemoryForm() {\n    _classCallCheck(this, MemoryForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MemoryForm).apply(this, arguments));\n  }\n\n  _createClass(MemoryForm, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.dispatch(showMemoryForm(false));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      values.type = \"memory\";\n      console.log('values are', values); // this.props.dispatch(submitMemoryForm(values, this.props.currentPetId));\n\n      this.props.dispatch(showMemoryForm(false));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('showing memory');\n      return React.createElement(\"div\", {\n        className: \"form-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: this.props.handleSubmit(function (values) {\n          return _this.onSubmit(values);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        onClick: function onClick() {\n          return _this.props.dispatch(showMemoryForm(false));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Memory Form\"), React.createElement(Field, {\n        component: Input,\n        label: \"Title:\",\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        validate: [required, nonEmpty],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        label: \"Date:\",\n        name: \"date\",\n        id: \"date\",\n        type: \"date\",\n        validate: [required, nonEmpty],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        label: \"Description:\",\n        type: \"textarea\",\n        name: \"description\",\n        id: \"description\",\n        validate: [required, nonEmpty],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.dispatch(showMemoryForm(false));\n        },\n        type: \"cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return MemoryForm;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var currentPetId = state.pawfile.currentPetId;\n  return {\n    // to get the initial values if the user is editing the form: \n    currentPetId: state.pawfile.currentPetId // initialValues: {\n    //   name: currentPetId>=0 ? state.pawfile.pawfiles[currentPetId].name : \"\",\n    // }\n\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n  form: 'MemoryForm'\n})(MemoryForm));","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfile/memory-form.js"],"names":["React","connect","reduxForm","Field","Fieldset","SubmissionError","focus","Input","submitMemoryForm","showMemoryForm","required","nonEmpty","stringToArrayList","MemoryForm","props","dispatch","values","type","console","log","handleSubmit","onSubmit","Component","mapStateToProps","state","currentPetId","pawfile","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {reduxForm, Field, Fieldset, SubmissionError, focus} from 'redux-form';\nimport Input from '../input';\nimport {submitMemoryForm, showMemoryForm} from '../../actions/index';\nimport {required, nonEmpty} from '../validators';\nimport {stringToArrayList} from '../helper-functions';\nimport '.././home/pawfile-form.css';\n\nexport class MemoryForm extends React.Component{\n  componentWillUnmount(){\n    this.props.dispatch(showMemoryForm(false));\n  }\n\n  onSubmit(values){\n    values.type=\"memory\";\n    console.log('values are', values);\n    // this.props.dispatch(submitMemoryForm(values, this.props.currentPetId));\n    this.props.dispatch(showMemoryForm(false));\n  }\n\n  render(){\n    console.log('showing memory')\n    return(\n      <div className='form-modal'>\n          <form className=\"form\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\n          <button type=\"button\" className = \"close\" onClick={()=>this.props.dispatch(showMemoryForm(false))}>X</button>\n          <h2>Memory Form</h2>\n\n            <Field\n              component={Input}\n              label=\"Title:\" \n              type=\"text\" \n              name=\"title\" \n              id=\"title\"\n              validate={[required, nonEmpty]}\n            /> \n\n            <Field\n              component={Input} \n              label = \"Date:\"\n              name=\"date\" \n              id=\"date\"\n              type = \"date\"\n              validate={[required, nonEmpty]}\n            />\n\n            <Field\n              component={Input}\n              label=\"Description:\" \n              type=\"textarea\" \n              name=\"description\" \n              id=\"description\"\n              validate={[required, nonEmpty]}\n            /> \n            \n            <div className=\"buttons\">\n              <button type=\"submit\">Save</button>\n              <button onClick={()=>this.props.dispatch(showMemoryForm(false))} type=\"cancel\">Cancel</button>\n            </div>\n          </form>\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  let currentPetId = state.pawfile.currentPetId;\n  return {\n    // to get the initial values if the user is editing the form: \n    currentPetId: state.pawfile.currentPetId,\n    // initialValues: {\n    //   name: currentPetId>=0 ? state.pawfile.pawfiles[currentPetId].name : \"\",\n    // }\n  }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n  form:'MemoryForm',\n})(MemoryForm));"]},"metadata":{},"sourceType":"module"}