{"ast":null,"code":"import { API_BASE_URL } from '../config';\n/* POST & PUT ACTIONS */\n\nexport var SUBMIT_POST_REQUEST = \"SUBMIT_POST_REQUEST\";\nexport var submitPostRequest = function submitPostRequest() {\n  return {\n    type: SUBMIT_POST_REQUEST\n  };\n};\nexport var SUBMIT_POST_SUCCESS = \"SUBMIT_POST_SUCCESS\";\nexport var submitPostSuccess = function submitPostSuccess(pawfile, currentPetId, postId) {\n  return {\n    type: SUBMIT_POST_SUCCESS,\n    pawfile: pawfile,\n    currentPetId: currentPetId,\n    postId: postId\n  };\n};\nexport var CRUD_ERROR = \"CRUD_ERROR\";\nexport var crudError = function crudError() {\n  return {\n    type: CRUD_ERROR\n  };\n};\nexport var submitPost = function submitPost(values, currentPetId, postId) {\n  return function (dispatch) {\n    //could be editing a post or submitting a new one, it's the same form\n    var method = postId ? \"PUT\" : \"POST\";\n    var path = postId ? \"\".concat(API_BASE_URL, \"/posts/\").concat(currentPetId, \"/\").concat(postId) : \"\".concat(API_BASE_URL, \"/posts/\").concat(currentPetId);\n    dispatch(submitPostRequest());\n    fetch(path, {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      return res.json();\n    }).then(function (pawfile) {\n      console.log('in actions, got back pawfile:', pawfile);\n      dispatch(submitPostSuccess(pawfile, currentPetId, postId));\n    }).catch(function (err) {\n      dispatch(crudError(err));\n    });\n  };\n};\n/* DELETE POST */\n\nexport var DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport var deletePostSuccess = function deletePostSuccess(currentPetId, postId) {\n  return {\n    type: DELETE_POST_SUCCESS,\n    currentPetId: currentPetId,\n    postId: postId\n  };\n};\nexport var DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\";\nexport var deletePostRequest = function deletePostRequest() {\n  return {\n    type: DELETE_POST_REQUEST\n  };\n};\nexport var deletePost = function deletePost(currentPetId, postId) {\n  return function (dispatch) {\n    dispatch(deletePostRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/posts/\").concat(currentPetId, \"/\").concat(postId), {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      console.log('successful deleting');\n      dispatch(deletePostSuccess(currentPetId, postId));\n    }).catch(function (err) {\n      dispatch(crudError(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/actions/post-crud.js"],"names":["API_BASE_URL","SUBMIT_POST_REQUEST","submitPostRequest","type","SUBMIT_POST_SUCCESS","submitPostSuccess","pawfile","currentPetId","postId","CRUD_ERROR","crudError","submitPost","values","dispatch","method","path","fetch","headers","body","JSON","stringify","then","res","ok","Promise","reject","statusText","json","console","log","catch","err","DELETE_POST_SUCCESS","deletePostSuccess","DELETE_POST_REQUEST","deletePostRequest","deletePost"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from '../config';\n\n/* POST & PUT ACTIONS */\nexport const SUBMIT_POST_REQUEST = \"SUBMIT_POST_REQUEST\";\nexport const submitPostRequest = () => ({\n    type: SUBMIT_POST_REQUEST,\n})\n\nexport const SUBMIT_POST_SUCCESS = \"SUBMIT_POST_SUCCESS\";\nexport const submitPostSuccess = (pawfile, currentPetId, postId) => ({\n    type: SUBMIT_POST_SUCCESS,\n    pawfile,\n    currentPetId,\n    postId\n})\n\nexport const CRUD_ERROR = \"CRUD_ERROR\";\nexport const crudError = () => ({\n  type: CRUD_ERROR,\n})\n\nexport const submitPost = (values, currentPetId, postId) => dispatch =>{\n    //could be editing a post or submitting a new one, it's the same form\n    const method = postId ? \"PUT\" : \"POST\";\n    const path = postId ? `${API_BASE_URL}/posts/${currentPetId}/${postId}` : `${API_BASE_URL}/posts/${currentPetId}`; \n    dispatch(submitPostRequest());\n    fetch(path, { \n        method: method,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values)\n    })\n    .then(res => {\n        if (!res.ok) {\n            return Promise.reject(res.statusText);\n        }\n        return res.json();\n    }).then(pawfile => {\n        console.log('in actions, got back pawfile:', pawfile);\n        dispatch(submitPostSuccess(pawfile, currentPetId, postId));\n    }).catch(err => {\n        dispatch(crudError(err));\n    });\n}\n\n/* DELETE POST */\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const deletePostSuccess = (currentPetId, postId) => ({\n    type: DELETE_POST_SUCCESS,\n    currentPetId,\n    postId\n});\n\nexport const DELETE_POST_REQUEST = \"DELETE_POST_REQUEST\";\nexport const deletePostRequest = () => ({\n    type: DELETE_POST_REQUEST,\n})\n\nexport const deletePost = (currentPetId, postId) => dispatch =>{\n    dispatch(deletePostRequest());\n    fetch(`${API_BASE_URL}/posts/${currentPetId}/${postId}`, { \n        method: \"DELETE\",\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        }\n    })\n    .then(res => {\n        if (!res.ok) {\n            return Promise.reject(res.statusText);\n        }\n        console.log('successful deleting');\n        dispatch(deletePostSuccess(currentPetId, postId));\n    })\n    .catch(err => {\n        dispatch(crudError(err));\n    });\n  }"]},"metadata":{},"sourceType":"module"}