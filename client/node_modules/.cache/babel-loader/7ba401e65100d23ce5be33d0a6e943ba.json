{"ast":null,"code":"import { API_BASE_URL } from '../config';\n/* POST & PUT ACTIONS */\n\nexport var SUBMIT_REMINDER_REQUEST = \"SUBMIT_REMINDER_REQUEST\";\nexport var submitReminderRequest = function submitReminderRequest() {\n  return {\n    type: SUBMIT_REMINDER_REQUEST\n  };\n};\nexport var SUBMIT_REMINDER_SUCCESS = \"SUBMIT_REMINDER_SUCCESS\";\nexport var submitReminderSuccess = function submitReminderSuccess(reminder, currentPetId) {\n  return {\n    type: SUBMIT_REMINDER_SUCCESS,\n    reminder: reminder,\n    currentPetId: currentPetId\n  };\n};\nexport var CRUD_ERROR = \"CRUD_ERROR\";\nexport var crudError = function crudError() {\n  return {\n    type: CRUD_ERROR\n  };\n};\nexport var submitReminder = function submitReminder(values, currentPetId) {\n  return function (dispatch) {\n    dispatch(submitReminderRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/reminders\"), {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      return res.json();\n    }).then(function (reminder) {\n      dispatch(submitReminderSuccess(reminder, currentPetId));\n    }).catch(function (err) {\n      dispatch(crudError(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/actions/reminder-crud.js"],"names":["API_BASE_URL","SUBMIT_REMINDER_REQUEST","submitReminderRequest","type","SUBMIT_REMINDER_SUCCESS","submitReminderSuccess","reminder","currentPetId","CRUD_ERROR","crudError","submitReminder","values","dispatch","fetch","method","headers","body","JSON","stringify","then","res","ok","Promise","reject","statusText","json","catch","err"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,WAA3B;AAEA;;AACA,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AACxCC,IAAAA,IAAI,EAAEF;AADkC,GAAP;AAAA,CAA9B;AAIP,OAAO,IAAMG,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,QAAD,EAAWC,YAAX;AAAA,SAA6B;AAC9DJ,IAAAA,IAAI,EAAEC,uBADwD;AAE9DE,IAAAA,QAAQ,EAARA,QAF8D;AAG9DC,IAAAA,YAAY,EAAZA;AAH8D,GAA7B;AAAA,CAA9B;AAMP,OAAO,IAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAO;AAC9BN,IAAAA,IAAI,EAAEK;AADwB,GAAP;AAAA,CAAlB;AAIP,OAAO,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASJ,YAAT;AAAA,SAA0B,UAAAK,QAAQ,EAAG;AAE/DA,IAAAA,QAAQ,CAACV,qBAAqB,EAAtB,CAAR;AACAW,IAAAA,KAAK,WAAIb,YAAJ,iBAA8B;AAC/Bc,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFsB;AAM/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,MAAf;AANyB,KAA9B,CAAL,CAQCQ,IARD,CAQM,UAAAC,GAAG,EAAI;AACT,UAAI,CAACA,GAAG,CAACC,EAAT,EAAa;AACT,eAAOC,OAAO,CAACC,MAAR,CAAeH,GAAG,CAACI,UAAnB,CAAP;AACH;;AACD,aAAOJ,GAAG,CAACK,IAAJ,EAAP;AACH,KAbD,EAaGN,IAbH,CAaQ,UAAAb,QAAQ,EAAI;AAChBM,MAAAA,QAAQ,CAACP,qBAAqB,CAACC,QAAD,EAAWC,YAAX,CAAtB,CAAR;AACH,KAfD,EAeGmB,KAfH,CAeS,UAAAC,GAAG,EAAI;AACZf,MAAAA,QAAQ,CAACH,SAAS,CAACkB,GAAD,CAAV,CAAR;AACH,KAjBD;AAkBH,GArB6B;AAAA,CAAvB","sourcesContent":["import {API_BASE_URL} from '../config';\n\n/* POST & PUT ACTIONS */\nexport const SUBMIT_REMINDER_REQUEST = \"SUBMIT_REMINDER_REQUEST\";\nexport const submitReminderRequest = () => ({\n    type: SUBMIT_REMINDER_REQUEST,\n})\n\nexport const SUBMIT_REMINDER_SUCCESS = \"SUBMIT_REMINDER_SUCCESS\";\nexport const submitReminderSuccess = (reminder, currentPetId) => ({\n    type: SUBMIT_REMINDER_SUCCESS,\n    reminder,\n    currentPetId\n})\n\nexport const CRUD_ERROR = \"CRUD_ERROR\";\nexport const crudError = () => ({\n  type: CRUD_ERROR,\n})\n\nexport const submitReminder = (values, currentPetId) => dispatch =>{\n\n    dispatch(submitReminderRequest());\n    fetch(`${API_BASE_URL}/reminders`, { \n        method: \"POST\",\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values)\n    })\n    .then(res => {\n        if (!res.ok) {\n            return Promise.reject(res.statusText);\n        }\n        return res.json();\n    }).then(reminder => {\n        dispatch(submitReminderSuccess(reminder, currentPetId));\n    }).catch(err => {\n        dispatch(crudError(err));\n    });\n}\n"]},"metadata":{},"sourceType":"module"}