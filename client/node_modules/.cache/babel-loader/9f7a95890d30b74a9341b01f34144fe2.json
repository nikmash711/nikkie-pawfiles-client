{"ast":null,"code":"import _toConsumableArray from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SHOW_PAWFILE_FORM, SUBMIT_PAWFILE, CHANGE_SORTING_PETS_METHOD, ADDING_NEW_REMINDER, DELETE_PAWFILE, TOGGLE_NAVBAR, DELETE_REMINDER, CHANGE_CURRENT_PET_ID, SHOW_MEDICAL_FORM, SUBMIT_MEDICAL_FORM, SHOW_MEMORY_FORM, SUBMIT_MEMORY_FORM, CHANGE_SEARCH_TERM, CHANGE_CATEGORY_FILTER, FETCH_PAWFILES_SUCCESS } from '../actions/index'; //dummy initial state \n// const initialState = {\n//   user: {firstName: 'Nikkie', lastName: \"Mashian\"},\n//   sortingPetsMethod: \"\",\n//   showPawfileForm: false,\n//   showMedicalForm: false,\n//   showMemoryForm: false,\n//   currentPetId: undefined,\n//   currentSearchTerm: \"\",\n//   categoryFilter: \"\",\n//   toggleNavbar:false,\n//   pawfiles: [\n//     {\n//       id: 0,\n//       name: \"Mushy\",\n//       species: \"Cat\",\n//       gender: \"Female\",\n//       breed: \"Domestic Mix\",\n//       weight: '8 lbs',\n//       birthday: \"2016-10-26\",\n//       bio: \"Meow. I'm a cute troublemaker. I'll purr then hiss. Give me scritches?\",\n//       img: \"https://i.ibb.co/y8hFnkL/2.jpg\",\n//       reminders: [\n//         {\n//           id: 0,\n//           note: \"Trim Nails\",\n//           date: \"2016-10-26\",\n//         },\n//         {\n//           id: 1,\n//           note: \"Vet Appointment\",\n//           date: \"2016-11-26\",\n//         },\n//       ],\n//       posts: [\n//         {\n//           id: 0,\n//           type: 'memory',\n//           title: 'Mushy learns how to open the door',\n//           date: 'Fri Dec 14 2018',\n//           description: 'I walked into the living room and saw her opening it with her claws. How dare she!',\n//           memory_img: 'https://i.ibb.co/YXHrzCq/Screen-Shot-2018-12-31-at-8-30-37-AM.png\" alt=\"Screen-Shot-2018-12-31-at-8-30-37-AM'\n//         },\n//         {\n//           id: 1,\n//           type: 'medical',\n//           title: 'Shes throwing up again:(',\n//           date: 'Fri Dec 14 2017',\n//           symptoms: ['lethargic', 'no appetite'],\n//           vaccinations:['rabies'],\n//           prescriptions:['Frontline flea'],\n//           doctor: 'Dr. Moon',\n//           notes: 'Gave her fluids for the day. Wont let her eat until tomorrow. Try laxatives.',\n//         }\n//       ],\n//       vaccinations: [\n//         {\n//           name: 'Rabies',\n//           date: '2018-10-12'\n//         }\n//       ],\n//       prescriptions:[]\n//     },\n//     {\n//       id: 1,\n//       name: \"Muffin\",\n//       species: \"Dog\",\n//       gender: \"Male\",\n//       breed: \"Pom/Yorkie Mix\",\n//       birthday: \"2010-01-10\",\n//       bio: \"Ruff. I want to always play and go on walks. Did you say snack?\",\n//       img: \"https://i.ibb.co/stMyFMp/IMG-6267.png\",\n//       reminders: [\n//         {\n//           id: 0,\n//           note: \"Give Shot\",\n//           date: \"Daily\"\n//         },\n//       ]\n//     },\n//   ]\n// };\n\nvar initialState = {};\nexport var pawfileReducer = function pawfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //Either when user clicks \"add new pawfile\", or clicks to edit a current pawfile. Need to set the currentPetId to either the id of the pet being edited, or undefined if it's a new pet/closing form\n  if (action.type === SHOW_PAWFILE_FORM) {\n    return Object.assign({}, state, {\n      showPawfileForm: action.bool,\n      currentPetId: action.currentPetId\n    });\n  } else if (action.type === SUBMIT_PAWFILE) {\n    //if its editing an existing pawfile: \n    if (action.currentPetId >= 0) {\n      var updatedValues = action.values;\n\n      var pawfileToUpdate = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n        return pawfile.id == action.currentPetId;\n      })); //merge updated values with rest of pawfile: \n\n\n      var updatedPawfile = Object.assign({}, pawfileToUpdate, updatedValues);\n      var newArrayOfPawfiles = state.pawfiles.map(function (item) {\n        return item.id == action.currentPetId ? updatedPawfile : item;\n      });\n      return Object.assign({}, state, {\n        pawfiles: newArrayOfPawfiles\n      });\n    } //if its a new pawfile: \n\n\n    return Object.assign({}, state, {\n      pawfiles: [].concat(_toConsumableArray(state.pawfiles), [action.values])\n    });\n  } else if (action.type === SUBMIT_MEDICAL_FORM) {\n    var _pawfileToUpdate = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    })); //check if there's any previous posts for this pet. How we handle adding the new post depends on this.\n\n\n    var previousPosts = _pawfileToUpdate.posts ? _toConsumableArray(_pawfileToUpdate.posts) : '';\n\n    if (previousPosts) {\n      _pawfileToUpdate.posts = [].concat(_toConsumableArray(_pawfileToUpdate.posts), [action.values]);\n    } else {\n      _pawfileToUpdate.posts = [action.values];\n    } //check if there's any previous vaccinations, prescriptions, etc. for this pet. How we handle adding the new ones depends on this.\n\n\n    if (action.values.vaccinations) {\n      var vaccinationList = action.values.vaccinations.map(function (vaccination) {\n        return {\n          name: vaccination,\n          date: action.values.date\n        };\n      });\n      var previousVaccinations = _pawfileToUpdate.vaccinations ? _toConsumableArray(_pawfileToUpdate.vaccinations) : '';\n\n      if (previousVaccinations) {\n        _pawfileToUpdate.vaccinations = [].concat(_toConsumableArray(_pawfileToUpdate.vaccinations), _toConsumableArray(vaccinationList));\n      } else {\n        _pawfileToUpdate.vaccinations = _toConsumableArray(vaccinationList);\n      }\n    }\n\n    if (action.values.prescriptions) {\n      var prescriptionList = action.values.prescriptions.map(function (prescription) {\n        return {\n          name: prescription,\n          date: action.values.date\n        };\n      });\n      var previousPrescriptions = _pawfileToUpdate.prescriptions ? _toConsumableArray(_pawfileToUpdate.prescriptions) : '';\n\n      if (previousPrescriptions) {\n        _pawfileToUpdate.prescriptions = [].concat(_toConsumableArray(_pawfileToUpdate.prescriptions), _toConsumableArray(prescriptionList));\n      } else {\n        _pawfileToUpdate.prescriptions = _toConsumableArray(prescriptionList);\n      }\n    }\n\n    var _newArrayOfPawfiles = state.pawfiles.map(function (item) {\n      return item.id == action.currentPetId ? _pawfileToUpdate : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles\n    });\n  } else if (action.type === SUBMIT_MEMORY_FORM) {\n    var _pawfileToUpdate2 = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }));\n\n    var _previousPosts = _pawfileToUpdate2.posts ? _toConsumableArray(_pawfileToUpdate2.posts) : '';\n\n    if (_previousPosts) {\n      _pawfileToUpdate2.posts = [].concat(_toConsumableArray(_pawfileToUpdate2.posts), [action.values]);\n    } else {\n      _pawfileToUpdate2.posts = [action.values];\n    }\n\n    var _newArrayOfPawfiles2 = state.pawfiles.map(function (item) {\n      return item.id == action.currentPetId ? _pawfileToUpdate2 : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles2\n    });\n  } else if (action.type === DELETE_PAWFILE) {\n    var _newArrayOfPawfiles3 = state.pawfiles.filter(function (item) {\n      return item.id !== action.currentPetId;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles3\n    });\n  } else if (action.type === ADDING_NEW_REMINDER) {\n    var newReminder = action.values; //create a new obj -this was the problem (I was directly mutating state)\n\n    var _pawfileToUpdate3 = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }));\n\n    var previousReminders = _pawfileToUpdate3.reminders ? _toConsumableArray(_pawfileToUpdate3.reminders) : ''; //\n\n    if (previousReminders) {\n      _pawfileToUpdate3.reminders = [].concat(_toConsumableArray(_pawfileToUpdate3.reminders), [newReminder]);\n    } else {\n      _pawfileToUpdate3.reminders = [newReminder];\n    }\n\n    var _newArrayOfPawfiles4 = state.pawfiles.map(function (item) {\n      return item.id == action.currentPetId ? _pawfileToUpdate3 : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles4\n    });\n  } else if (action.type === DELETE_REMINDER) {\n    var _pawfileToUpdate4 = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }));\n\n    var updatedReminders = _pawfileToUpdate4.reminders.filter(function (reminder) {\n      return reminder.id !== action.reminderId;\n    });\n\n    _pawfileToUpdate4.reminders = updatedReminders; // const updatedPawfile = Object.assign({}, state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId), {\n    //   pawfileToUpdate\n    // })\n\n    var _newArrayOfPawfiles5 = state.pawfiles.map(function (item) {\n      return item.id == action.currentPetId ? _pawfileToUpdate4 : item;\n    });\n\n    console.log('newArrayOfPawfiles is', _newArrayOfPawfiles5);\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles5\n    });\n  } else if (action.type === CHANGE_SORTING_PETS_METHOD) {\n    return Object.assign({}, state, {\n      sortingPetsMethod: action.sortMethod\n    });\n  } else if (action.type === TOGGLE_NAVBAR) {\n    if (action.bool === true || action.bool === false) {\n      return Object.assign({}, state, {\n        toggleNavbar: action.bool\n      });\n    }\n\n    return Object.assign({}, state, {\n      toggleNavbar: !state.toggleNavbar\n    });\n  } else if (action.type === CHANGE_CURRENT_PET_ID) {\n    console.log('changing id', action.currentPetId);\n    return Object.assign({}, state, {\n      currentPetId: action.currentPetId\n    });\n  } else if (action.type === SHOW_MEDICAL_FORM) {\n    return Object.assign({}, state, {\n      showMedicalForm: action.bool\n    });\n  } else if (action.type === SHOW_MEMORY_FORM) {\n    return Object.assign({}, state, {\n      showMemoryForm: action.bool\n    });\n  } else if (action.type === CHANGE_SEARCH_TERM) {\n    return Object.assign({}, state, {\n      currentSearchTerm: action.searchTerm\n    });\n  } else if (action.type === CHANGE_CATEGORY_FILTER) {\n    return Object.assign({}, state, {\n      categoryFilter: action.categoryFilter\n    });\n  } else if (action.type === FETCH_PAWFILES_SUCCESS) {\n    return action.pawfiles;\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/reducers/pawfile-reducer.js"],"names":["SHOW_PAWFILE_FORM","SUBMIT_PAWFILE","CHANGE_SORTING_PETS_METHOD","ADDING_NEW_REMINDER","DELETE_PAWFILE","TOGGLE_NAVBAR","DELETE_REMINDER","CHANGE_CURRENT_PET_ID","SHOW_MEDICAL_FORM","SUBMIT_MEDICAL_FORM","SHOW_MEMORY_FORM","SUBMIT_MEMORY_FORM","CHANGE_SEARCH_TERM","CHANGE_CATEGORY_FILTER","FETCH_PAWFILES_SUCCESS","initialState","pawfileReducer","state","action","type","Object","assign","showPawfileForm","bool","currentPetId","updatedValues","values","pawfileToUpdate","pawfiles","find","pawfile","id","updatedPawfile","newArrayOfPawfiles","map","item","previousPosts","posts","vaccinations","vaccinationList","vaccination","name","date","previousVaccinations","prescriptions","prescriptionList","prescription","previousPrescriptions","filter","newReminder","previousReminders","reminders","updatedReminders","reminder","reminderId","console","log","sortingPetsMethod","sortMethod","toggleNavbar","showMedicalForm","showMemoryForm","currentSearchTerm","searchTerm","categoryFilter"],"mappings":"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","sourcesContent":["import {SHOW_PAWFILE_FORM, SUBMIT_PAWFILE, CHANGE_SORTING_PETS_METHOD, ADDING_NEW_REMINDER, DELETE_PAWFILE, TOGGLE_NAVBAR, DELETE_REMINDER, CHANGE_CURRENT_PET_ID, SHOW_MEDICAL_FORM, SUBMIT_MEDICAL_FORM, SHOW_MEMORY_FORM, SUBMIT_MEMORY_FORM, CHANGE_SEARCH_TERM, CHANGE_CATEGORY_FILTER, FETCH_PAWFILES_SUCCESS} from '../actions/index';\n\n//dummy initial state \n// const initialState = {\n//   user: {firstName: 'Nikkie', lastName: \"Mashian\"},\n//   sortingPetsMethod: \"\",\n//   showPawfileForm: false,\n//   showMedicalForm: false,\n//   showMemoryForm: false,\n//   currentPetId: undefined,\n//   currentSearchTerm: \"\",\n//   categoryFilter: \"\",\n//   toggleNavbar:false,\n//   pawfiles: [\n//     {\n//       id: 0,\n//       name: \"Mushy\",\n//       species: \"Cat\",\n//       gender: \"Female\",\n//       breed: \"Domestic Mix\",\n//       weight: '8 lbs',\n//       birthday: \"2016-10-26\",\n//       bio: \"Meow. I'm a cute troublemaker. I'll purr then hiss. Give me scritches?\",\n//       img: \"https://i.ibb.co/y8hFnkL/2.jpg\",\n//       reminders: [\n//         {\n//           id: 0,\n//           note: \"Trim Nails\",\n//           date: \"2016-10-26\",\n//         },\n//         {\n//           id: 1,\n//           note: \"Vet Appointment\",\n//           date: \"2016-11-26\",\n//         },\n//       ],\n//       posts: [\n//         {\n//           id: 0,\n//           type: 'memory',\n//           title: 'Mushy learns how to open the door',\n//           date: 'Fri Dec 14 2018',\n//           description: 'I walked into the living room and saw her opening it with her claws. How dare she!',\n//           memory_img: 'https://i.ibb.co/YXHrzCq/Screen-Shot-2018-12-31-at-8-30-37-AM.png\" alt=\"Screen-Shot-2018-12-31-at-8-30-37-AM'\n//         },\n//         {\n//           id: 1,\n//           type: 'medical',\n//           title: 'Shes throwing up again:(',\n//           date: 'Fri Dec 14 2017',\n//           symptoms: ['lethargic', 'no appetite'],\n//           vaccinations:['rabies'],\n//           prescriptions:['Frontline flea'],\n//           doctor: 'Dr. Moon',\n//           notes: 'Gave her fluids for the day. Wont let her eat until tomorrow. Try laxatives.',\n//         }\n//       ],\n//       vaccinations: [\n//         {\n//           name: 'Rabies',\n//           date: '2018-10-12'\n//         }\n//       ],\n//       prescriptions:[]\n//     },\n//     {\n//       id: 1,\n//       name: \"Muffin\",\n//       species: \"Dog\",\n//       gender: \"Male\",\n//       breed: \"Pom/Yorkie Mix\",\n//       birthday: \"2010-01-10\",\n//       bio: \"Ruff. I want to always play and go on walks. Did you say snack?\",\n//       img: \"https://i.ibb.co/stMyFMp/IMG-6267.png\",\n//       reminders: [\n//         {\n//           id: 0,\n//           note: \"Give Shot\",\n//           date: \"Daily\"\n//         },\n//       ]\n//     },\n   \n//   ]\n// };\n\nconst initialState = {\n};\n\n\nexport const pawfileReducer = (state = initialState, action)=> {\n\n  //Either when user clicks \"add new pawfile\", or clicks to edit a current pawfile. Need to set the currentPetId to either the id of the pet being edited, or undefined if it's a new pet/closing form\n  if(action.type=== SHOW_PAWFILE_FORM){\n    return Object.assign({}, state, {\n      showPawfileForm: action.bool,\n      currentPetId: action.currentPetId\n    })\n  }\n\n  else if (action.type=== SUBMIT_PAWFILE){\n    //if its editing an existing pawfile: \n    if(action.currentPetId>=0){\n      const updatedValues = action.values;\n      let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n      //merge updated values with rest of pawfile: \n      let updatedPawfile = Object.assign({}, pawfileToUpdate, updatedValues)\n\n      const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id==action.currentPetId ? updatedPawfile : item))\n  \n      return Object.assign({}, state, {\n          pawfiles: newArrayOfPawfiles\n      })\n    }\n    //if its a new pawfile: \n    return Object.assign({}, state, {\n      pawfiles: [\n        ...state.pawfiles,\n        action.values\n      ],\n    })\n  }\n\n  else if(action.type===SUBMIT_MEDICAL_FORM){\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    //check if there's any previous posts for this pet. How we handle adding the new post depends on this.\n    let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n\n    if(previousPosts){\n      pawfileToUpdate.posts = [...pawfileToUpdate.posts, action.values];\n    }\n    else{\n      pawfileToUpdate.posts = [action.values];\n    }\n\n    //check if there's any previous vaccinations, prescriptions, etc. for this pet. How we handle adding the new ones depends on this.\n    if(action.values.vaccinations)\n    {\n      let vaccinationList = action.values.vaccinations.map(vaccination=>{\n        return {name: vaccination, date: action.values.date}\n      })\n\n      let previousVaccinations = pawfileToUpdate.vaccinations  ? [...pawfileToUpdate.vaccinations ] : '';\n\n      if(previousVaccinations){\n        pawfileToUpdate.vaccinations = [...pawfileToUpdate.vaccinations, ...vaccinationList];      \n      }\n      else{\n        pawfileToUpdate.vaccinations = [...vaccinationList];\n      }\n    }\n\n    if(action.values.prescriptions)\n    {\n      let prescriptionList = action.values.prescriptions.map(prescription=>{\n        return {name: prescription, date: action.values.date}\n      })\n\n      let previousPrescriptions = pawfileToUpdate.prescriptions  ? [...pawfileToUpdate.prescriptions ] : '';\n\n      if(previousPrescriptions){\n        pawfileToUpdate.prescriptions = [...pawfileToUpdate.prescriptions, ...prescriptionList];\n     \n      }\n      else{\n        pawfileToUpdate.prescriptions = [...prescriptionList];\n      }\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id==action.currentPetId ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type===SUBMIT_MEMORY_FORM){\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n\n    if(previousPosts){\n      pawfileToUpdate.posts = [...pawfileToUpdate.posts, action.values];\n    }\n    else{\n      pawfileToUpdate.posts = [action.values];\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id==action.currentPetId ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type===DELETE_PAWFILE){\n    const newArrayOfPawfiles = state.pawfiles.filter((item)=> (item.id!==action.currentPetId));\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles,\n    })\n  }\n\n  else if (action.type=== ADDING_NEW_REMINDER){\n    const newReminder = action.values;\n\n    //create a new obj -this was the problem (I was directly mutating state)\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    let previousReminders = pawfileToUpdate.reminders ? [...pawfileToUpdate.reminders] : '';\n\n    //\n    if(previousReminders){\n      pawfileToUpdate.reminders=[...pawfileToUpdate.reminders, newReminder];\n    }\n    else{\n      pawfileToUpdate.reminders=[newReminder];\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id==action.currentPetId ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n        pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type=== DELETE_REMINDER){\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    const updatedReminders = pawfileToUpdate.reminders.filter((reminder)=> (reminder.id!==action.reminderId));\n\n    pawfileToUpdate.reminders=updatedReminders;\n\n    // const updatedPawfile = Object.assign({}, state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId), {\n    //   pawfileToUpdate\n    // })\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id==action.currentPetId ? pawfileToUpdate : item))\n\n    console.log('newArrayOfPawfiles is', newArrayOfPawfiles)\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if (action.type=== CHANGE_SORTING_PETS_METHOD){\n    return Object.assign({}, state, {\n      sortingPetsMethod: action.sortMethod,\n    })\n  }\n\n  else if (action.type===TOGGLE_NAVBAR){\n    if(action.bool===true || action.bool===false){\n      return Object.assign({}, state, {\n        toggleNavbar: action.bool,\n      })\n    }\n    return Object.assign({}, state, {\n      toggleNavbar: !state.toggleNavbar,\n    })\n  }\n\n  else if(action.type===CHANGE_CURRENT_PET_ID){\n    console.log('changing id', action.currentPetId);\n    return Object.assign({}, state, {\n      currentPetId: action.currentPetId\n    })\n  }\n\n  else if(action.type===SHOW_MEDICAL_FORM){\n    return Object.assign({}, state, {\n      showMedicalForm: action.bool\n    })\n  }\n\n  else if(action.type===SHOW_MEMORY_FORM){\n    return Object.assign({}, state, {\n      showMemoryForm: action.bool\n    })\n  }\n\n  else if(action.type===CHANGE_SEARCH_TERM){\n    return Object.assign({}, state, {\n      currentSearchTerm: action.searchTerm,\n    })\n  }\n\n  else if(action.type===CHANGE_CATEGORY_FILTER){\n    return Object.assign({}, state, {\n      categoryFilter: action.categoryFilter,\n    })\n  }\n\n  else if (action.type === FETCH_PAWFILES_SUCCESS) {\n    return action.pawfiles;\n}\n\n  return state;\n}"]},"metadata":{},"sourceType":"module"}