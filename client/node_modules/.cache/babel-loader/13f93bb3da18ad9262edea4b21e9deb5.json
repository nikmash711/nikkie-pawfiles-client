{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/home/pawfile-form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { reduxForm, Field, Fieldset, SubmissionError, focus } from 'redux-form';\nimport Input from '../input';\nimport { submitPawfile, showPawfileForm, createNewPawfile } from '../../actions/index';\nimport { required, nonEmpty, unSelected } from '../validators';\nimport './pawfile-form.css';\nexport var PawfileForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PawfileForm, _React$Component);\n\n  function PawfileForm() {\n    _classCallCheck(this, PawfileForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PawfileForm).apply(this, arguments));\n  }\n\n  _createClass(PawfileForm, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.dispatch(showPawfileForm(false, undefined));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      this.props.dispatch(submitPawfile(values, this.props.currentPetId));\n      this.props.dispatch(showPawfileForm(false, undefined));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"div\", {\n        className: \"form-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"form blurb\",\n        onSubmit: this.props.handleSubmit(function (values) {\n          return _this.onSubmit(values);\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        onClick: function onClick() {\n          return _this.props.dispatch(showPawfileForm(false, undefined));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"X\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.initialValues.name ? this.props.initialValues.name : \"New Pawfile\"), React.createElement(Field, {\n        component: Input,\n        label: \"Name:\",\n        type: \"text\",\n        name: \"name\",\n        id: \"name\",\n        validate: [required, nonEmpty],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        label: \"Image URL:\",\n        type: \"url\",\n        name: \"img\",\n        id: \"img\",\n        validate: [required, nonEmpty],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        label: \"Species:\",\n        name: \"species\",\n        id: \"species\",\n        type: \"text\",\n        element: \"select\",\n        validate: [unSelected],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        className: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" Select a Species\"), React.createElement(\"option\", {\n        value: \"Dog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Dog\"), React.createElement(\"option\", {\n        value: \"Cat\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Cat\"), React.createElement(\"option\", {\n        value: \"Bird\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Bird\")), React.createElement(Field, {\n        component: Input,\n        label: \"Breed:\",\n        name: \"breed\",\n        id: \"breed\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        label: \"Gender:\",\n        name: \"gender\",\n        id: \"gender\",\n        element: \"select\",\n        type: \"text\",\n        validate: [unSelected],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Select a Gender\"), React.createElement(\"option\", {\n        value: \"Female\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Female\"), React.createElement(\"option\", {\n        value: \"Male\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Male\")), React.createElement(Field, {\n        component: Input,\n        label: \"Weight:\",\n        name: \"weight\",\n        id: \"weight\",\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        label: \"Birthday:\",\n        name: \"birthday\",\n        id: \"birthday\",\n        type: \"date\" // max= {new Date().toLocaleDateString()}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Field, {\n        component: Input,\n        element: \"textarea\",\n        label: \"Bio:\",\n        name: \"bio\",\n        id: \"bio\",\n        type: \"textarea\",\n        className: \"test\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"Save Pawfile\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.dispatch(showPawfileForm(false, undefined));\n        },\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Cancel\"))));\n    }\n  }]);\n\n  return PawfileForm;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var currentPetId = state.pawfile.currentPetId;\n  var individualPawfile = state.pawfile.pawfiles.find(function (pawfile) {\n    return pawfile.id == currentPetId;\n  });\n  console.log('in mapstatetoprops in pawfile form, state is', state.pawfile);\n  return {\n    // to get the initial values if the user is editing the form: \n    currentPetId: state.pawfile.currentPetId,\n    initialValues: {\n      name: currentPetId >= 0 ? individualPawfile.name : \"\",\n      img: currentPetId >= 0 ? individualPawfile.img : \"\",\n      species: currentPetId >= 0 ? individualPawfile.species : \"\",\n      gender: currentPetId >= 0 ? individualPawfile.gender : \"\",\n      breed: currentPetId >= 0 ? individualPawfile.breed : \"\",\n      birthday: currentPetId >= 0 ? individualPawfile.birthday : \"\",\n      bio: currentPetId >= 0 ? individualPawfile.bio : \"\"\n    }\n  };\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n  form: 'PawfileForm'\n})(PawfileForm));","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/home/pawfile-form.js"],"names":["React","connect","reduxForm","Field","Fieldset","SubmissionError","focus","Input","submitPawfile","showPawfileForm","createNewPawfile","required","nonEmpty","unSelected","PawfileForm","props","dispatch","undefined","values","currentPetId","handleSubmit","onSubmit","initialValues","name","Component","mapStateToProps","state","pawfile","individualPawfile","pawfiles","find","id","console","log","img","species","gender","breed","birthday","bio","form"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {reduxForm, Field, Fieldset, SubmissionError, focus} from 'redux-form';\nimport Input from '../input';\nimport {submitPawfile, showPawfileForm, createNewPawfile} from '../../actions/index';\nimport {required, nonEmpty, unSelected} from '../validators';\nimport './pawfile-form.css';\n\nexport class PawfileForm extends React.Component{\n\n  componentWillUnmount(){\n    this.props.dispatch(showPawfileForm(false, undefined));\n  }\n\n  onSubmit(values){\n    this.props.dispatch(submitPawfile(values, this.props.currentPetId));\n    this.props.dispatch(showPawfileForm(false, undefined));\n  }\n\n  render(){\n    return(\n      <div className='form-modal'>\n          <form className=\"form blurb\" onSubmit={this.props.handleSubmit(values => this.onSubmit(values))}>\n\n            <button type=\"button\" className = \"close\" onClick={()=>this.props.dispatch(showPawfileForm(false, undefined))}>X</button>\n\n            <h2>{this.props.initialValues.name ? this.props.initialValues.name : \"New Pawfile\"}</h2>\n\n            <Field\n              component={Input}\n              label=\"Name:\" \n              type=\"text\" \n              name=\"name\" \n              id=\"name\"\n              validate={[required, nonEmpty]}\n              /> \n\n            <Field\n              component={Input}\n              label=\"Image URL:\" \n              type=\"url\" \n              name=\"img\" \n              id=\"img\"\n              validate={[required, nonEmpty]}\n            />\n            \n            <Field\n              component={Input} \n              label = \"Species:\"\n              name=\"species\" \n              id=\"species\"\n              type = \"text\"\n              element=\"select\"\n              validate={[unSelected]}\n              >\n              <option value=\"\" className=\"bold\"> Select a Species</option>\n              <option value=\"Dog\">Dog</option>\n              <option value=\"Cat\">Cat</option>\n              <option value=\"Bird\">Bird</option>\n            </Field>\n\n            <Field\n              component={Input} \n              label = \"Breed:\"\n              name=\"breed\" \n              id=\"breed\"\n              type = \"text\"\n            />\n\n            <Field\n              component={Input} \n              label = \"Gender:\"\n              name=\"gender\" \n              id=\"gender\"\n              element=\"select\"\n              type = \"text\"\n              validate={[unSelected]}\n              >\n              <option value=\"\"> Select a Gender</option>\n              <option value=\"Female\">Female</option>\n              <option value=\"Male\">Male</option>\n            </Field>\n\n            <Field\n              component={Input} \n              label = \"Weight:\"\n              name=\"weight\" \n              id=\"weight\"\n              type = \"text\"\n            />\n\n            <Field\n              component={Input} \n              label = \"Birthday:\"\n              name=\"birthday\" \n              id=\"birthday\"\n              type = \"date\"\n              // max= {new Date().toLocaleDateString()}\n            />\n\n            <Field\n              component={Input} \n              element=\"textarea\"\n              label = \"Bio:\"\n              name=\"bio\" \n              id=\"bio\"\n              type = \"textarea\"\n              className=\"test\"\n            />\n\n            <div className=\"buttons\">\n              <button type=\"submit\">Save Pawfile</button>\n              <button onClick={()=>this.props.dispatch(showPawfileForm(false, undefined))} type=\"button\">Cancel</button>\n            </div>\n            \n          </form>\n        </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  let currentPetId = state.pawfile.currentPetId;\n  let individualPawfile = state.pawfile.pawfiles.find(pawfile=>pawfile.id==currentPetId);\n  console.log('in mapstatetoprops in pawfile form, state is', state.pawfile)\n  return {\n    // to get the initial values if the user is editing the form: \n    currentPetId: state.pawfile.currentPetId,\n    initialValues: {\n      name: currentPetId>=0 ? individualPawfile.name : \"\",\n      img: currentPetId>=0 ? individualPawfile.img : \"\",\n      species: currentPetId>=0 ? individualPawfile.species : \"\",\n      gender: currentPetId>=0 ?individualPawfile.gender : \"\",\n      breed: currentPetId>=0 ? individualPawfile.breed : \"\",\n      birthday: currentPetId>=0 ? individualPawfile.birthday : \"\",\n      bio: currentPetId>=0 ? individualPawfile.bio : \"\",\n    }\n  }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n  form:'PawfileForm',\n})(PawfileForm));"]},"metadata":{},"sourceType":"module"}