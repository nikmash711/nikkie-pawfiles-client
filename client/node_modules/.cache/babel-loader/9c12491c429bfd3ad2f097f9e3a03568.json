{"ast":null,"code":"import _toConsumableArray from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { SHOW_PAWFILE_FORM, SUBMIT_NEW_PAWFILE, SORTING_ALL_PETS, ADDING_NEW_REMINDER, DELETE_PAWFILE, TOGGLE_NAVBAR, DELETE_REMINDER, CHANGE_CURRENT_PET_ID, SHOW_MEDICAL_FORM, SUBMIT_MEDICAL_FORM, SHOW_MEMORY_FORM, SUBMIT_MEMORY_FORM, CHANGE_SEARCH_TERM, CHANGE_CATEGORY_FILTER } from '../actions/index';\nvar initialState = {\n  user: {\n    firstName: 'Nikkie',\n    lastName: \"Mashian\"\n  },\n  sortingPetsMethod: \"\",\n  showPawfileForm: false,\n  showMedicalForm: false,\n  showMemoryForm: false,\n  currentPetId: undefined,\n  currentSearchTerm: \"\",\n  categoryFilter: \"\",\n  toggleNavbar: false,\n  pawfiles: [{\n    id: 0,\n    name: \"Mushy\",\n    species: \"Cat\",\n    gender: \"Female\",\n    breed: \"Domestic Mix\",\n    weight: '8 lbs',\n    birthday: \"2016-10-26\",\n    bio: \"Meow. I'm a cute troublemaker. I'll purr then hiss. Give me scritches?\",\n    img: \"https://i.ibb.co/y8hFnkL/2.jpg\",\n    reminders: [{\n      id: 0,\n      note: \"Trim Nails\",\n      date: \"2016-10-26\"\n    }, {\n      id: 1,\n      note: \"Vet Appointment\",\n      date: \"2016-11-26\"\n    }],\n    posts: [{\n      id: 0,\n      type: 'memory',\n      title: 'Mushy learns how to open the door',\n      date: 'Fri Dec 14 2018',\n      description: 'I walked into the living room and saw her opening it with her claws. How dare she!',\n      memory_img: 'https://i.ibb.co/y8hFnkL/2.jpg'\n    }, {\n      id: 1,\n      type: 'medical',\n      title: 'Shes throwing up again:(',\n      date: 'Fri Dec 14 2017',\n      symptoms: ['lethargic', 'no appetite'],\n      vaccinations: ['rabies'],\n      prescriptions: ['Frontline flea'],\n      doctor: 'Dr. Moon',\n      notes: 'Gave her fluids for the day. Wont let her eat until tomorrow. Try laxatives.'\n    }],\n    vaccinations: [{\n      name: 'Rabies',\n      date: '2018-10-12'\n    }],\n    prescriptions: []\n  }, {\n    id: 1,\n    name: \"Muffin\",\n    species: \"Dog\",\n    gender: \"Male\",\n    breed: \"Pom/Yorkie Mix\",\n    birthday: \"2010-01-10\",\n    bio: \"Ruff. I want to always play and go on walks. Did you say snack?\",\n    img: \"https://i.ibb.co/stMyFMp/IMG-6267.png\",\n    reminders: [{\n      id: 0,\n      note: \"Give Shot\",\n      date: \"Daily\"\n    }]\n  }]\n};\nexport var pawfileReducer = function pawfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === SHOW_PAWFILE_FORM) {\n    console.log('changing petid');\n    return Object.assign({}, state, {\n      showPawfileForm: action.bool,\n      currentPetId: action.id\n    });\n  } else if (action.type === SUBMIT_NEW_PAWFILE) {\n    //if its editing a current pawfile: \n    if (action.id >= 0) {\n      var updatedValues = action.values;\n      var pawfileToUpdate = state.pawfiles[action.id]; //merge updated values with other stuff in the pawfile: \n\n      var updatedPawfile = Object.assign({}, pawfileToUpdate, updatedValues);\n      var newArrayOfPawfiles = state.pawfiles.map(function (item) {\n        return item.id === action.id ? updatedPawfile : item;\n      });\n      return Object.assign({}, state, {\n        pawfiles: newArrayOfPawfiles\n      });\n    } //if its a new pawfile: \n\n\n    return Object.assign({}, state, {\n      pawfiles: [].concat(_toConsumableArray(state.pawfiles), [action.values])\n    });\n  } else if (action.type === SUBMIT_MEDICAL_FORM) {\n    var _pawfileToUpdate = state.pawfiles[action.id];\n    var previousPosts = _pawfileToUpdate.posts ? _toConsumableArray(_pawfileToUpdate.posts) : '';\n\n    if (previousPosts) {\n      _pawfileToUpdate.posts = [previousPosts, action.values];\n    } else {\n      _pawfileToUpdate.posts = [action.values];\n    } //this method only works if the pet has an existing or blank vaccination/prescription prop -- how will this work with backend?\n\n\n    if (action.values.vaccinations) {\n      var vaccinationList = action.values.vaccinations.map(function (vaccination) {\n        return {\n          name: vaccination,\n          date: action.values.date\n        };\n      });\n      var previousVaccinations = _pawfileToUpdate.vaccinations ? _toConsumableArray(_pawfileToUpdate.vaccinations) : '';\n\n      if (previousVaccinations) {\n        _pawfileToUpdate.vaccinations = [].concat(_toConsumableArray(_pawfileToUpdate.vaccinations), _toConsumableArray(vaccinationList));\n      } else {\n        _pawfileToUpdate.vaccinations = _toConsumableArray(vaccinationList);\n      }\n    }\n\n    if (action.values.prescriptions) {\n      var prescriptionList = action.values.prescriptions.map(function (prescription) {\n        return {\n          name: prescription,\n          date: action.values.date\n        };\n      });\n      var previousPrescriptions = _pawfileToUpdate.prescriptions ? _toConsumableArray(_pawfileToUpdate.prescriptions) : '';\n\n      if (previousPrescriptions) {\n        _pawfileToUpdate.prescriptions = [].concat(_toConsumableArray(_pawfileToUpdate.prescriptions), _toConsumableArray(prescriptionList));\n      } else {\n        _pawfileToUpdate.prescriptions = _toConsumableArray(prescriptionList);\n      }\n    }\n\n    var _newArrayOfPawfiles = state.pawfiles.map(function (item) {\n      return item.id === action.id ? _pawfileToUpdate : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles\n    });\n  } else if (action.type === SUBMIT_MEMORY_FORM) {\n    var _pawfileToUpdate2 = state.pawfiles[action.id]; //Can't think of another simpler way to do this -- if the pet doesn't already have any posts, how else can I add posts? Maybe this will get clarified when I implement backend?\n    // let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n    // if(previousPosts){\n    //   pawfileToUpdate.posts = [previousPosts, action.values];\n    // }\n    // else{\n    //   pawfileToUpdate.posts = [action.values];\n    // }\n\n    _pawfileToUpdate2.posts = [].concat(_toConsumableArray(_pawfileToUpdate2.posts), [action.values]);\n\n    var _newArrayOfPawfiles2 = state.pawfiles.map(function (item) {\n      return item.id === action.id ? _pawfileToUpdate2 : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles2\n    });\n  } else if (action.type === DELETE_PAWFILE) {\n    var _newArrayOfPawfiles3 = state.pawfiles.filter(function (item) {\n      return item.id !== action.id;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles3\n    });\n  } else if (action.type === ADDING_NEW_REMINDER) {\n    var newReminder = action.values; //First, find the file with the ID you want. Then construct a new file object - stick it in a variable.\n\n    var _pawfileToUpdate3 = state.pawfiles[action.id];\n    var previousReminders = _pawfileToUpdate3.reminders ? _toConsumableArray(_pawfileToUpdate3.reminders) : '';\n\n    if (previousReminders) {\n      _pawfileToUpdate3.reminders = [].concat(_toConsumableArray(_pawfileToUpdate3.reminders), [newReminder]);\n    } else {\n      _pawfileToUpdate3.reminders = [newReminder];\n    } //  build up a new array of files. It should have all the old files, but in place of the one with the ID you want to change, you drop in the new file object from the variable you just created.\n\n\n    var _newArrayOfPawfiles4 = state.pawfiles.map(function (item) {\n      return item.id === action.id ? _pawfileToUpdate3 : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles4\n    });\n  } else if (action.type === DELETE_REMINDER) {\n    var _pawfileToUpdate4 = state.pawfiles[action.petId];\n\n    var updatedReminders = _pawfileToUpdate4.reminders.filter(function (reminder) {\n      return reminder.id !== action.reminderId;\n    });\n\n    _pawfileToUpdate4.reminders = updatedReminders;\n\n    var _updatedPawfile = Object.assign({}, state.pawfiles[action.petId], {\n      pawfileToUpdate: _pawfileToUpdate4\n    });\n\n    var _newArrayOfPawfiles5 = state.pawfiles.map(function (item) {\n      return item.id === action.petId ? _updatedPawfile : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles5\n    });\n  } else if (action.type === SORTING_ALL_PETS) {\n    console.log('in reducer valye is', action.sortMethod);\n    return Object.assign({}, state, {\n      sortingPetsMethod: action.sortMethod\n    });\n  } else if (action.type === TOGGLE_NAVBAR) {\n    if (action.bool === true || action.bool === false) {\n      return Object.assign({}, state, {\n        toggleNavbar: action.bool\n      });\n    }\n\n    return Object.assign({}, state, {\n      toggleNavbar: !state.toggleNavbar\n    });\n  } else if (action.type === CHANGE_CURRENT_PET_ID) {\n    console.log('changing id', action.id);\n    return Object.assign({}, state, {\n      currentPetId: action.id\n    });\n  } else if (action.type === SHOW_MEDICAL_FORM) {\n    return Object.assign({}, state, {\n      showMedicalForm: action.bool\n    });\n  } else if (action.type === SHOW_MEMORY_FORM) {\n    return Object.assign({}, state, {\n      showMemoryForm: action.bool\n    });\n  } else if (action.type === CHANGE_SEARCH_TERM) {\n    return Object.assign({}, state, {\n      currentSearchTerm: action.searchTerm\n    });\n  } else if (action.type === CHANGE_CATEGORY_FILTER) {\n    return Object.assign({}, state, {\n      categoryFilter: action.categoryFilter\n    });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/reducers/pawfile-reducer.js"],"names":["SHOW_PAWFILE_FORM","SUBMIT_NEW_PAWFILE","SORTING_ALL_PETS","ADDING_NEW_REMINDER","DELETE_PAWFILE","TOGGLE_NAVBAR","DELETE_REMINDER","CHANGE_CURRENT_PET_ID","SHOW_MEDICAL_FORM","SUBMIT_MEDICAL_FORM","SHOW_MEMORY_FORM","SUBMIT_MEMORY_FORM","CHANGE_SEARCH_TERM","CHANGE_CATEGORY_FILTER","initialState","user","firstName","lastName","sortingPetsMethod","showPawfileForm","showMedicalForm","showMemoryForm","currentPetId","undefined","currentSearchTerm","categoryFilter","toggleNavbar","pawfiles","id","name","species","gender","breed","weight","birthday","bio","img","reminders","note","date","posts","type","title","description","memory_img","symptoms","vaccinations","prescriptions","doctor","notes","pawfileReducer","state","action","console","log","Object","assign","bool","updatedValues","values","pawfileToUpdate","updatedPawfile","newArrayOfPawfiles","map","item","previousPosts","vaccinationList","vaccination","previousVaccinations","prescriptionList","prescription","previousPrescriptions","filter","newReminder","previousReminders","petId","updatedReminders","reminder","reminderId","sortMethod","searchTerm"],"mappings":"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","sourcesContent":["import {SHOW_PAWFILE_FORM, SUBMIT_NEW_PAWFILE, SORTING_ALL_PETS, ADDING_NEW_REMINDER, DELETE_PAWFILE, TOGGLE_NAVBAR, DELETE_REMINDER, CHANGE_CURRENT_PET_ID, SHOW_MEDICAL_FORM, SUBMIT_MEDICAL_FORM, SHOW_MEMORY_FORM, SUBMIT_MEMORY_FORM, CHANGE_SEARCH_TERM, CHANGE_CATEGORY_FILTER} from '../actions/index';\n\nconst initialState = {\n  user: {firstName: 'Nikkie', lastName: \"Mashian\"},\n  sortingPetsMethod: \"\",\n  showPawfileForm: false,\n  showMedicalForm: false,\n  showMemoryForm: false,\n  currentPetId: undefined,\n  currentSearchTerm: \"\",\n  categoryFilter: \"\",\n  toggleNavbar:false,\n  pawfiles: [\n    {\n      id: 0,\n      name: \"Mushy\",\n      species: \"Cat\",\n      gender: \"Female\",\n      breed: \"Domestic Mix\",\n      weight: '8 lbs',\n      birthday: \"2016-10-26\",\n      bio: \"Meow. I'm a cute troublemaker. I'll purr then hiss. Give me scritches?\",\n      img: \"https://i.ibb.co/y8hFnkL/2.jpg\",\n      reminders: [\n        {\n          id: 0,\n          note: \"Trim Nails\",\n          date: \"2016-10-26\",\n        },\n        {\n          id: 1,\n          note: \"Vet Appointment\",\n          date: \"2016-11-26\",\n        },\n      ],\n      posts: [\n        {\n          id: 0,\n          type: 'memory',\n          title: 'Mushy learns how to open the door',\n          date: 'Fri Dec 14 2018',\n          description: 'I walked into the living room and saw her opening it with her claws. How dare she!',\n          memory_img: 'https://i.ibb.co/y8hFnkL/2.jpg'\n        },\n        {\n          id: 1,\n          type: 'medical',\n          title: 'Shes throwing up again:(',\n          date: 'Fri Dec 14 2017',\n          symptoms: ['lethargic', 'no appetite'],\n          vaccinations:['rabies'],\n          prescriptions:['Frontline flea'],\n          doctor: 'Dr. Moon',\n          notes: 'Gave her fluids for the day. Wont let her eat until tomorrow. Try laxatives.',\n        }\n      ],\n      vaccinations: [\n        {\n          name: 'Rabies',\n          date: '2018-10-12'\n        }\n      ],\n      prescriptions:[]\n    },\n    {\n      id: 1,\n      name: \"Muffin\",\n      species: \"Dog\",\n      gender: \"Male\",\n      breed: \"Pom/Yorkie Mix\",\n      birthday: \"2010-01-10\",\n      bio: \"Ruff. I want to always play and go on walks. Did you say snack?\",\n      img: \"https://i.ibb.co/stMyFMp/IMG-6267.png\",\n      reminders: [\n        {\n          id: 0,\n          note: \"Give Shot\",\n          date: \"Daily\"\n        },\n      ]\n    },\n   \n  ]\n};\n\nexport const pawfileReducer = (state = initialState, action)=> {\n\n  if(action.type=== SHOW_PAWFILE_FORM){\n    console.log('changing petid')\n    return Object.assign({}, state, {\n      showPawfileForm: action.bool,\n      currentPetId: action.id\n    })\n  }\n\n  else if (action.type=== SUBMIT_NEW_PAWFILE){\n    //if its editing a current pawfile: \n    if(action.id>=0){\n      const updatedValues = action.values;\n      let pawfileToUpdate = state.pawfiles[action.id];\n\n      //merge updated values with other stuff in the pawfile: \n      let updatedPawfile = Object.assign({}, pawfileToUpdate, updatedValues)\n\n      const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.id ? updatedPawfile : item))\n  \n      return Object.assign({}, state, {\n          pawfiles: newArrayOfPawfiles\n      })\n    }\n    //if its a new pawfile: \n    return Object.assign({}, state, {\n      pawfiles: [\n        ...state.pawfiles,\n        action.values\n      ],\n    })\n  }\n\n  else if(action.type===SUBMIT_MEDICAL_FORM){\n    let pawfileToUpdate = state.pawfiles[action.id];\n\n    let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n\n    if(previousPosts){\n      pawfileToUpdate.posts = [previousPosts, action.values];\n    }\n    else{\n      pawfileToUpdate.posts = [action.values];\n    }\n\n\n    //this method only works if the pet has an existing or blank vaccination/prescription prop -- how will this work with backend?\n    if(action.values.vaccinations){\n      let vaccinationList = action.values.vaccinations.map(vaccination=>{\n        return {name: vaccination, date: action.values.date}\n      })\n\n      let previousVaccinations = pawfileToUpdate.vaccinations  ? [...pawfileToUpdate.vaccinations ] : '';\n\n      if(previousVaccinations){\n        pawfileToUpdate.vaccinations = [...pawfileToUpdate.vaccinations, ...vaccinationList];      \n      }\n      else{\n        pawfileToUpdate.vaccinations = [...vaccinationList];\n      }\n    }\n\n    if(action.values.prescriptions){\n      let prescriptionList = action.values.prescriptions.map(prescription=>{\n        return {name: prescription, date: action.values.date}\n      })\n\n      let previousPrescriptions = pawfileToUpdate.prescriptions  ? [...pawfileToUpdate.prescriptions ] : '';\n\n      if(previousPrescriptions){\n        pawfileToUpdate.prescriptions = [...pawfileToUpdate.prescriptions, ...prescriptionList];\n     \n      }\n      else{\n        pawfileToUpdate.prescriptions = [...prescriptionList];\n      }\n\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.id ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n  })\n  }\n\n  else if(action.type===SUBMIT_MEMORY_FORM){\n    let pawfileToUpdate = state.pawfiles[action.id];\n\n    //Can't think of another simpler way to do this -- if the pet doesn't already have any posts, how else can I add posts? Maybe this will get clarified when I implement backend?\n    // let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n\n    // if(previousPosts){\n    //   pawfileToUpdate.posts = [previousPosts, action.values];\n    // }\n    // else{\n    //   pawfileToUpdate.posts = [action.values];\n    // }\n\n    pawfileToUpdate.posts = [...pawfileToUpdate.posts, action.values];\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.id ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n  })\n  }\n\n  else if(action.type===DELETE_PAWFILE){\n    const newArrayOfPawfiles = state.pawfiles.filter((item)=> (item.id!==action.id));\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles,\n    })\n  }\n\n  else if (action.type=== ADDING_NEW_REMINDER){\n    const newReminder = action.values;\n    //First, find the file with the ID you want. Then construct a new file object - stick it in a variable.\n    const pawfileToUpdate = state.pawfiles[action.id];\n\n    let previousReminders = pawfileToUpdate.reminders ? [...pawfileToUpdate.reminders] : '';\n\n    if(previousReminders){\n      pawfileToUpdate.reminders=[...pawfileToUpdate.reminders, newReminder];\n    }\n    else{\n      pawfileToUpdate.reminders=[newReminder];\n    }\n\n    //  build up a new array of files. It should have all the old files, but in place of the one with the ID you want to change, you drop in the new file object from the variable you just created.\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.id ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n        pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type=== DELETE_REMINDER){\n    let pawfileToUpdate =  state.pawfiles[action.petId];\n\n    const updatedReminders = pawfileToUpdate.reminders.filter((reminder)=> (reminder.id!==action.reminderId));\n\n    pawfileToUpdate.reminders=updatedReminders;\n\n    const updatedPawfile = Object.assign({},  state.pawfiles[action.petId], {\n      pawfileToUpdate\n    })\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.petId ? updatedPawfile : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n  })\n\n  }\n\n  else if (action.type=== SORTING_ALL_PETS){\n    console.log('in reducer valye is', action.sortMethod);\n    return Object.assign({}, state, {\n      sortingPetsMethod: action.sortMethod,\n    })\n  }\n\n  else if (action.type===TOGGLE_NAVBAR){\n    if(action.bool===true ||action.bool===false){\n      return Object.assign({}, state, {\n        toggleNavbar: action.bool,\n      })\n    }\n    return Object.assign({}, state, {\n      toggleNavbar: !state.toggleNavbar,\n    })\n  }\n\n  else if(action.type===CHANGE_CURRENT_PET_ID){\n    console.log('changing id', action.id);\n    return Object.assign({}, state, {\n      currentPetId: action.id\n    })\n  }\n\n  else if(action.type===SHOW_MEDICAL_FORM){\n    return Object.assign({}, state, {\n      showMedicalForm: action.bool\n    })\n  }\n\n  else if(action.type===SHOW_MEMORY_FORM){\n    return Object.assign({}, state, {\n      showMemoryForm: action.bool\n    })\n  }\n\n  else if(action.type===CHANGE_SEARCH_TERM){\n    return Object.assign({}, state, {\n      currentSearchTerm: action.searchTerm,\n    })\n  }\n\n  else if(action.type===CHANGE_CATEGORY_FILTER){\n    return Object.assign({}, state, {\n      categoryFilter: action.categoryFilter,\n    })\n  }\n\n  return state;\n}"]},"metadata":{},"sourceType":"module"}