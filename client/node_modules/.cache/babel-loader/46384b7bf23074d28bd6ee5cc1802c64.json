{"ast":null,"code":"export function isLeapYear(year) {\n  var d = new Date(year, 1, 28);\n  d.setDate(d.getDate() + 1);\n  return d.getMonth() == 1;\n}\nexport function calculateAge(date) {\n  var d = new Date(date),\n      now = new Date();\n  var years = now.getFullYear() - d.getFullYear();\n  d.setFullYear(d.getFullYear() + years);\n\n  if (d > now) {\n    years--;\n    d.setFullYear(d.getFullYear() - 1);\n  }\n\n  var days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000);\n  var weeks = Math.floor(days / 7);\n  var age_in_years = Math.floor(years + days / (isLeapYear(now.getFullYear()) ? 366 : 365));\n  var final_age = age_in_years;\n\n  if (age_in_years === 0) {\n    final_age = \"~ \".concat(weeks, \" weeks\");\n  }\n\n  if (weeks === 0) {\n    final_age = \" ~ \".concat(Math.floor(days), \" days\");\n  }\n\n  return final_age;\n}\nexport function todaysDate() {\n  var date = new Date().toISOString();\n  var dateArr = date.split('T');\n  var final = dateArr[0];\n  return final;\n}\nexport function formatDate(dateString) {\n  var dateArr = dateString.split('-');\n  return new Date(dateArr[0], dateArr[1] - 1, dateArr[2]);\n}\nexport function changeMilitaryFormat(military_time) {\n  var hours24 = parseInt(military_time.substring(0, 2));\n  var hours = (hours24 + 11) % 12 + 1;\n  var amPm = hours24 > 11 ? 'PM' : 'AM';\n  var minutes = military_time.substring(2);\n  minutes = minutes.split(':').join('');\n  return hours + ':' + minutes + amPm;\n}\nexport function stringToArrayList(str) {\n  console.log('str is', str);\n\n  if (str.trim() === \"\") {\n    console.log('here');\n    return [];\n  }\n\n  var arr = str.split(',');\n  return arr.map(function (item) {\n    return item.trim();\n  });\n}\nexport function arrayToString(arr) {\n  return arr.join(', ');\n}\nexport function filterBySearch(searchTerm, posts) {\n  console.log('the posts in theh helper are', posts);\n  return posts.filter(function (post) {\n    return post.props.title.toLowerCase().includes(searchTerm) || post.props.date.toLowerCase().includes(searchTerm) || post.props.description && post.props.description.toLowerCase().includes(searchTerm) || post.props.notes && post.props.notes.toLowerCase().includes(searchTerm) || post.props.doctor && post.props.doctor.toLowerCase().includes(searchTerm) || post.props.symptoms && post.props.symptoms.find(function (symptom) {\n      return symptom.toLowerCase().includes(searchTerm);\n    }) || post.props.prescriptions && post.props.prescriptions.find(function (prescription) {\n      return prescription.toLowerCase().includes(searchTerm);\n    }) || post.props.vaccinations && post.props.vaccinations.find(function (vaccination) {\n      return vaccination.toLowerCase().includes(searchTerm);\n    });\n  });\n}\nexport function sortNewestToOldest(posts) {\n  return posts.sort(function (postA, postB) {\n    return new Date(postB.props.date) - new Date(postA.props.date);\n  });\n}\nexport function sortOldestToNewest(items) {\n  return items.sort(function (itemA, itemB) {\n    return new Date(itemA.props.date) - new Date(itemB.props.date);\n  });\n}\nexport function sortByOldest(pawfiles_list) {\n  pawfiles_list.sort(function (a, b) {\n    return new Date(a.props.birthday) - new Date(b.props.birthday);\n  });\n}\nexport function sortByYoungest(pawfiles_list) {\n  pawfiles_list.sort(function (a, b) {\n    return new Date(b.props.birthday) - new Date(a.props.birthday);\n  });\n}\nexport function sortAtoZ(pawfiles_list) {\n  pawfiles_list.sort(function (a, b) {\n    return a.props.name < b.props.name ? -1 : a.props.name < b.props.name ? 1 : 0;\n  });\n}\nexport function sortZtoA(pawfiles_list) {\n  pawfiles_list.sort(function (a, b) {\n    return a.props.name > b.props.name ? -1 : a.props.name > b.props.name ? 1 : 0;\n  });\n}\nexport function filterByCategory(filter, posts) {\n  return posts.filter(function (post) {\n    return post.props.type === filter;\n  });\n}","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/helper-functions.js"],"names":["isLeapYear","year","d","Date","setDate","getDate","getMonth","calculateAge","date","now","years","getFullYear","setFullYear","days","getTime","weeks","Math","floor","age_in_years","final_age","todaysDate","toISOString","dateArr","split","final","formatDate","dateString","changeMilitaryFormat","military_time","hours24","parseInt","substring","hours","amPm","minutes","join","stringToArrayList","str","console","log","trim","arr","map","item","arrayToString","filterBySearch","searchTerm","posts","filter","post","props","title","toLowerCase","includes","description","notes","doctor","symptoms","find","symptom","prescriptions","prescription","vaccinations","vaccination","sortNewestToOldest","sort","postA","postB","sortOldestToNewest","items","itemA","itemB","sortByOldest","pawfiles_list","a","b","birthday","sortByYoungest","sortAtoZ","name","sortZtoA","filterByCategory","type"],"mappings":"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","sourcesContent":["export function isLeapYear(year) {\n  let d = new Date(year, 1, 28);\n  d.setDate(d.getDate() + 1);\n  return d.getMonth() == 1;\n}\n\nexport function calculateAge(date) {\n  let d = new Date(date),\n      now = new Date();\n  let years = now.getFullYear() - d.getFullYear();\n  d.setFullYear(d.getFullYear() + years);\n  if (d > now) {\n      years--;\n      d.setFullYear(d.getFullYear() - 1);\n  }\n  let days = (now.getTime() - d.getTime()) / (3600 * 24 * 1000);\n  let weeks= Math.floor(days/7);\n  let age_in_years= Math.floor(years + days / (isLeapYear(now.getFullYear()) ? 366 : 365))\n  ;\n  let final_age = age_in_years;\n\n  if(age_in_years===0){\n    final_age= `~ ${weeks} weeks`\n  }\n  if(weeks===0){\n    final_age=` ~ ${Math.floor(days)} days`\n  }\n  return final_age;\n}\n\nexport function todaysDate (){\n  let date = new Date().toISOString();\n  let dateArr = date.split('T');\n  let final = dateArr[0];\n  return final;\n}\n\nexport function formatDate(dateString){\n  let dateArr = dateString.split('-');\n  return new Date(dateArr[0], dateArr[1]-1, dateArr[2]);\n}\n\nexport function changeMilitaryFormat(military_time){\n    let hours24 = parseInt(military_time.substring(0,2));\n    let hours = ((hours24 + 11) % 12) + 1;\n    let amPm = hours24 > 11 ? 'PM' : 'AM';\n    let minutes = military_time.substring(2);\n    minutes = minutes.split(':').join('');\n    return hours + ':' + minutes + amPm;\n}\n\nexport function stringToArrayList(str){\n  console.log('str is', str);\n  if(str.trim()===\"\"){\n    console.log('here');\n    return [];\n  }\n  const arr = str.split(',');\n  return arr.map(item=>item.trim());\n}\n\nexport function arrayToString(arr){\n  return arr.join(', ');\n}\n\nexport function filterBySearch(searchTerm, posts){\n  console.log('the posts in theh helper are', posts);\n  return posts.filter(post=>\n    post.props.title.toLowerCase().includes(searchTerm) || post.props.date.toLowerCase().includes(searchTerm) || \n    (post.props.description && post.props.description.toLowerCase().includes(searchTerm)) || \n    (post.props.notes && post.props.notes.toLowerCase().includes(searchTerm)) || \n    (post.props.doctor && post.props.doctor.toLowerCase().includes(searchTerm)) || \n    (post.props.symptoms && post.props.symptoms.find(symptom=>symptom.toLowerCase().includes(searchTerm))) || \n    (post.props.prescriptions && post.props.prescriptions.find(prescription=>prescription.toLowerCase().includes(searchTerm))) || \n    (post.props.vaccinations && post.props.vaccinations.find(vaccination=>vaccination.toLowerCase().includes(searchTerm)))\n    )\n}\n\nexport function sortNewestToOldest(posts){\n  return posts.sort((postA, postB)=> new Date(postB.props.date) - new Date(postA.props.date));\n}\n\nexport function sortOldestToNewest(items){\n  return items.sort((itemA, itemB)=> new Date(itemA.props.date) - new Date(itemB.props.date));\n}\n\nexport function sortByOldest(pawfiles_list){\n  pawfiles_list.sort((a,b)=> new Date(a.props.birthday) - new Date(b.props.birthday))\n}\n\nexport function sortByYoungest(pawfiles_list){\n  pawfiles_list.sort((a,b)=> new Date(b.props.birthday) - new Date(a.props.birthday))\n}\n\nexport function sortAtoZ(pawfiles_list){\n  pawfiles_list.sort((a,b)=> a.props.name < b.props.name ? -1 : a.props.name < b.props.name ? 1 : 0)\n}\n\nexport function sortZtoA(pawfiles_list){\n  pawfiles_list.sort((a,b)=> a.props.name > b.props.name ? -1 : a.props.name > b.props.name ? 1 : 0)\n}\n\nexport function filterByCategory(filter, posts){\n  return posts.filter(post=>post.props.type===filter);\n}"]},"metadata":{},"sourceType":"module"}