{"ast":null,"code":"import _toConsumableArray from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { SHOW_PAWFILE_FORM, SUBMIT_PAWFILE, CHANGE_SORTING_PETS_METHOD, ADDING_NEW_REMINDER, DELETE_PAWFILE, TOGGLE_NAVBAR, DELETE_REMINDER, CHANGE_CURRENT_PET_ID, SHOW_MEDICAL_FORM, SUBMIT_MEDICAL_FORM, SHOW_MEMORY_FORM, SUBMIT_MEMORY_FORM, CHANGE_SEARCH_TERM, CHANGE_CATEGORY_FILTER } from '../actions/index'; //dummy initial state \n\nvar initialState = {\n  user: {\n    firstName: 'Nikkie',\n    lastName: \"Mashian\"\n  },\n  sortingPetsMethod: \"\",\n  showPawfileForm: false,\n  showMedicalForm: false,\n  showMemoryForm: false,\n  currentPetId: undefined,\n  currentSearchTerm: \"\",\n  categoryFilter: \"\",\n  toggleNavbar: false,\n  pawfiles: [{\n    id: 0,\n    name: \"Mushy\",\n    species: \"Cat\",\n    gender: \"Female\",\n    breed: \"Domestic Mix\",\n    weight: '8 lbs',\n    birthday: \"2016-10-26\",\n    bio: \"Meow. I'm a cute troublemaker. I'll purr then hiss. Give me scritches?\",\n    img: \"https://i.ibb.co/y8hFnkL/2.jpg\",\n    reminders: [{\n      id: 0,\n      note: \"Trim Nails\",\n      date: \"2016-10-26\"\n    }, {\n      id: 1,\n      note: \"Vet Appointment\",\n      date: \"2016-11-26\"\n    }],\n    posts: [{\n      id: 0,\n      type: 'memory',\n      title: 'Mushy learns how to open the door',\n      date: 'Fri Dec 14 2018',\n      description: 'I walked into the living room and saw her opening it with her claws. How dare she!',\n      memory_img: 'https://i.ibb.co/YXHrzCq/Screen-Shot-2018-12-31-at-8-30-37-AM.png\" alt=\"Screen-Shot-2018-12-31-at-8-30-37-AM'\n    }, {\n      id: 1,\n      type: 'medical',\n      title: 'Shes throwing up again:(',\n      date: 'Fri Dec 14 2017',\n      symptoms: ['lethargic', 'no appetite'],\n      vaccinations: ['rabies'],\n      prescriptions: ['Frontline flea'],\n      doctor: 'Dr. Moon',\n      notes: 'Gave her fluids for the day. Wont let her eat until tomorrow. Try laxatives.'\n    }],\n    vaccinations: [{\n      name: 'Rabies',\n      date: '2018-10-12'\n    }],\n    prescriptions: []\n  }, {\n    id: 1,\n    name: \"Muffin\",\n    species: \"Dog\",\n    gender: \"Male\",\n    breed: \"Pom/Yorkie Mix\",\n    birthday: \"2010-01-10\",\n    bio: \"Ruff. I want to always play and go on walks. Did you say snack?\",\n    img: \"https://i.ibb.co/stMyFMp/IMG-6267.png\",\n    reminders: [{\n      id: 0,\n      note: \"Give Shot\",\n      date: \"Daily\"\n    }]\n  }]\n};\nexport var pawfileReducer = function pawfileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //Either when user clicks \"add new pawfile\", or clicks to edit a current pawfile. Need to set the currentPetId to either the id of the pet being edited, or undefined if it's a new pet/closing form\n  if (action.type === SHOW_PAWFILE_FORM) {\n    return Object.assign({}, state, {\n      showPawfileForm: action.bool,\n      currentPetId: action.currentPetId\n    });\n  } else if (action.type === SUBMIT_PAWFILE) {\n    //if its editing an existing pawfile: \n    if (action.currentPetId >= 0) {\n      var updatedValues = action.values;\n\n      var pawfileToUpdate = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n        return pawfile.id == action.currentPetId;\n      })); //merge updated values with rest of pawfile: \n\n\n      var updatedPawfile = Object.assign({}, pawfileToUpdate, updatedValues);\n      var newArrayOfPawfiles = state.pawfiles.map(function (item) {\n        return item.id === action.currentPetId ? updatedPawfile : item;\n      });\n      return Object.assign({}, state, {\n        pawfiles: newArrayOfPawfiles\n      });\n    } //if its a new pawfile: \n\n\n    return Object.assign({}, state, {\n      pawfiles: [].concat(_toConsumableArray(state.pawfiles), [action.values])\n    });\n  } else if (action.type === SUBMIT_MEDICAL_FORM) {\n    var _pawfileToUpdate = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    })); //check if there's any previous posts for this pet. How we handle adding the new post depends on this.\n\n\n    var previousPosts = _pawfileToUpdate.posts ? _toConsumableArray(_pawfileToUpdate.posts) : '';\n\n    if (previousPosts) {\n      _pawfileToUpdate.posts = [].concat(_toConsumableArray(_pawfileToUpdate.posts), [action.values]);\n    } else {\n      _pawfileToUpdate.posts = [action.values];\n    } //check if there's any previous vaccinations, prescriptions, etc. for this pet. How we handle adding the new ones depends on this.\n\n\n    if (action.values.vaccinations) {\n      var vaccinationList = action.values.vaccinations.map(function (vaccination) {\n        return {\n          name: vaccination,\n          date: action.values.date\n        };\n      });\n      var previousVaccinations = _pawfileToUpdate.vaccinations ? _toConsumableArray(_pawfileToUpdate.vaccinations) : '';\n\n      if (previousVaccinations) {\n        _pawfileToUpdate.vaccinations = [].concat(_toConsumableArray(_pawfileToUpdate.vaccinations), _toConsumableArray(vaccinationList));\n      } else {\n        _pawfileToUpdate.vaccinations = _toConsumableArray(vaccinationList);\n      }\n    }\n\n    if (action.values.prescriptions) {\n      var prescriptionList = action.values.prescriptions.map(function (prescription) {\n        return {\n          name: prescription,\n          date: action.values.date\n        };\n      });\n      var previousPrescriptions = _pawfileToUpdate.prescriptions ? _toConsumableArray(_pawfileToUpdate.prescriptions) : '';\n\n      if (previousPrescriptions) {\n        _pawfileToUpdate.prescriptions = [].concat(_toConsumableArray(_pawfileToUpdate.prescriptions), _toConsumableArray(prescriptionList));\n      } else {\n        _pawfileToUpdate.prescriptions = _toConsumableArray(prescriptionList);\n      }\n    }\n\n    var _newArrayOfPawfiles = state.pawfiles.map(function (item) {\n      return item.id === action.currentPetId ? _pawfileToUpdate : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles\n    });\n  } else if (action.type === SUBMIT_MEMORY_FORM) {\n    var _pawfileToUpdate2 = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }));\n\n    var _previousPosts = _pawfileToUpdate2.posts ? _toConsumableArray(_pawfileToUpdate2.posts) : '';\n\n    if (_previousPosts) {\n      _pawfileToUpdate2.posts = [].concat(_toConsumableArray(_pawfileToUpdate2.posts), [action.values]);\n    } else {\n      _pawfileToUpdate2.posts = [action.values];\n    }\n\n    var _newArrayOfPawfiles2 = state.pawfiles.map(function (item) {\n      return item.id === action.currentPetId ? _pawfileToUpdate2 : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles2\n    });\n  } else if (action.type === DELETE_PAWFILE) {\n    var _newArrayOfPawfiles3 = state.pawfiles.filter(function (item) {\n      return item.id !== action.currentPetId;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles3\n    });\n  } else if (action.type === ADDING_NEW_REMINDER) {\n    var newReminder = action.values; //create a new obj -this was the problem (I was directly mutating state)\n\n    var _pawfileToUpdate3 = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }));\n\n    var previousReminders = _pawfileToUpdate3.reminders ? _toConsumableArray(_pawfileToUpdate3.reminders) : ''; //\n\n    if (previousReminders) {\n      _pawfileToUpdate3.reminders = [].concat(_toConsumableArray(_pawfileToUpdate3.reminders), [newReminder]);\n    } else {\n      _pawfileToUpdate3.reminders = [newReminder];\n    }\n\n    var _newArrayOfPawfiles4 = state.pawfiles.map(function (item) {\n      return item.id === action.currentPetId ? _pawfileToUpdate3 : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles4\n    });\n  } else if (action.type === DELETE_REMINDER) {\n    var _pawfileToUpdate4 = _objectSpread({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }));\n\n    var updatedReminders = _pawfileToUpdate4.reminders.filter(function (reminder) {\n      return reminder.id !== action.reminderId;\n    });\n\n    _pawfileToUpdate4.reminders = updatedReminders;\n\n    var _updatedPawfile = Object.assign({}, state.pawfiles.find(function (pawfile) {\n      return pawfile.id == action.currentPetId;\n    }), {\n      pawfileToUpdate: _pawfileToUpdate4\n    });\n\n    console.log('updatedPawfile is', _updatedPawfile);\n\n    var _newArrayOfPawfiles5 = state.pawfiles.map(function (item) {\n      return item.id === action.currentPetId ? _updatedPawfile : item;\n    });\n\n    return Object.assign({}, state, {\n      pawfiles: _newArrayOfPawfiles5\n    });\n  } else if (action.type === CHANGE_SORTING_PETS_METHOD) {\n    return Object.assign({}, state, {\n      sortingPetsMethod: action.sortMethod\n    });\n  } else if (action.type === TOGGLE_NAVBAR) {\n    if (action.bool === true || action.bool === false) {\n      return Object.assign({}, state, {\n        toggleNavbar: action.bool\n      });\n    }\n\n    return Object.assign({}, state, {\n      toggleNavbar: !state.toggleNavbar\n    });\n  } else if (action.type === CHANGE_CURRENT_PET_ID) {\n    console.log('changing id', action.currentPetId);\n    return Object.assign({}, state, {\n      currentPetId: action.currentPetId\n    });\n  } else if (action.type === SHOW_MEDICAL_FORM) {\n    return Object.assign({}, state, {\n      showMedicalForm: action.bool\n    });\n  } else if (action.type === SHOW_MEMORY_FORM) {\n    return Object.assign({}, state, {\n      showMemoryForm: action.bool\n    });\n  } else if (action.type === CHANGE_SEARCH_TERM) {\n    return Object.assign({}, state, {\n      currentSearchTerm: action.searchTerm\n    });\n  } else if (action.type === CHANGE_CATEGORY_FILTER) {\n    return Object.assign({}, state, {\n      categoryFilter: action.categoryFilter\n    });\n  }\n\n  return state;\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/reducers/pawfile-reducer.js"],"names":["SHOW_PAWFILE_FORM","SUBMIT_PAWFILE","CHANGE_SORTING_PETS_METHOD","ADDING_NEW_REMINDER","DELETE_PAWFILE","TOGGLE_NAVBAR","DELETE_REMINDER","CHANGE_CURRENT_PET_ID","SHOW_MEDICAL_FORM","SUBMIT_MEDICAL_FORM","SHOW_MEMORY_FORM","SUBMIT_MEMORY_FORM","CHANGE_SEARCH_TERM","CHANGE_CATEGORY_FILTER","initialState","user","firstName","lastName","sortingPetsMethod","showPawfileForm","showMedicalForm","showMemoryForm","currentPetId","undefined","currentSearchTerm","categoryFilter","toggleNavbar","pawfiles","id","name","species","gender","breed","weight","birthday","bio","img","reminders","note","date","posts","type","title","description","memory_img","symptoms","vaccinations","prescriptions","doctor","notes","pawfileReducer","state","action","Object","assign","bool","updatedValues","values","pawfileToUpdate","find","pawfile","updatedPawfile","newArrayOfPawfiles","map","item","previousPosts","vaccinationList","vaccination","previousVaccinations","prescriptionList","prescription","previousPrescriptions","filter","newReminder","previousReminders","updatedReminders","reminder","reminderId","console","log","sortMethod","searchTerm"],"mappings":"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","sourcesContent":["import {SHOW_PAWFILE_FORM, SUBMIT_PAWFILE, CHANGE_SORTING_PETS_METHOD, ADDING_NEW_REMINDER, DELETE_PAWFILE, TOGGLE_NAVBAR, DELETE_REMINDER, CHANGE_CURRENT_PET_ID, SHOW_MEDICAL_FORM, SUBMIT_MEDICAL_FORM, SHOW_MEMORY_FORM, SUBMIT_MEMORY_FORM, CHANGE_SEARCH_TERM, CHANGE_CATEGORY_FILTER} from '../actions/index';\n\n//dummy initial state \nconst initialState = {\n  user: {firstName: 'Nikkie', lastName: \"Mashian\"},\n  sortingPetsMethod: \"\",\n  showPawfileForm: false,\n  showMedicalForm: false,\n  showMemoryForm: false,\n  currentPetId: undefined,\n  currentSearchTerm: \"\",\n  categoryFilter: \"\",\n  toggleNavbar:false,\n  pawfiles: [\n    {\n      id: 0,\n      name: \"Mushy\",\n      species: \"Cat\",\n      gender: \"Female\",\n      breed: \"Domestic Mix\",\n      weight: '8 lbs',\n      birthday: \"2016-10-26\",\n      bio: \"Meow. I'm a cute troublemaker. I'll purr then hiss. Give me scritches?\",\n      img: \"https://i.ibb.co/y8hFnkL/2.jpg\",\n      reminders: [\n        {\n          id: 0,\n          note: \"Trim Nails\",\n          date: \"2016-10-26\",\n        },\n        {\n          id: 1,\n          note: \"Vet Appointment\",\n          date: \"2016-11-26\",\n        },\n      ],\n      posts: [\n        {\n          id: 0,\n          type: 'memory',\n          title: 'Mushy learns how to open the door',\n          date: 'Fri Dec 14 2018',\n          description: 'I walked into the living room and saw her opening it with her claws. How dare she!',\n          memory_img: 'https://i.ibb.co/YXHrzCq/Screen-Shot-2018-12-31-at-8-30-37-AM.png\" alt=\"Screen-Shot-2018-12-31-at-8-30-37-AM'\n        },\n        {\n          id: 1,\n          type: 'medical',\n          title: 'Shes throwing up again:(',\n          date: 'Fri Dec 14 2017',\n          symptoms: ['lethargic', 'no appetite'],\n          vaccinations:['rabies'],\n          prescriptions:['Frontline flea'],\n          doctor: 'Dr. Moon',\n          notes: 'Gave her fluids for the day. Wont let her eat until tomorrow. Try laxatives.',\n        }\n      ],\n      vaccinations: [\n        {\n          name: 'Rabies',\n          date: '2018-10-12'\n        }\n      ],\n      prescriptions:[]\n    },\n    {\n      id: 1,\n      name: \"Muffin\",\n      species: \"Dog\",\n      gender: \"Male\",\n      breed: \"Pom/Yorkie Mix\",\n      birthday: \"2010-01-10\",\n      bio: \"Ruff. I want to always play and go on walks. Did you say snack?\",\n      img: \"https://i.ibb.co/stMyFMp/IMG-6267.png\",\n      reminders: [\n        {\n          id: 0,\n          note: \"Give Shot\",\n          date: \"Daily\"\n        },\n      ]\n    },\n   \n  ]\n};\n\nexport const pawfileReducer = (state = initialState, action)=> {\n\n  //Either when user clicks \"add new pawfile\", or clicks to edit a current pawfile. Need to set the currentPetId to either the id of the pet being edited, or undefined if it's a new pet/closing form\n  if(action.type=== SHOW_PAWFILE_FORM){\n    return Object.assign({}, state, {\n      showPawfileForm: action.bool,\n      currentPetId: action.currentPetId\n    })\n  }\n\n  else if (action.type=== SUBMIT_PAWFILE){\n    //if its editing an existing pawfile: \n    if(action.currentPetId>=0){\n      const updatedValues = action.values;\n      let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n      //merge updated values with rest of pawfile: \n      let updatedPawfile = Object.assign({}, pawfileToUpdate, updatedValues)\n\n      const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.currentPetId ? updatedPawfile : item))\n  \n      return Object.assign({}, state, {\n          pawfiles: newArrayOfPawfiles\n      })\n    }\n    //if its a new pawfile: \n    return Object.assign({}, state, {\n      pawfiles: [\n        ...state.pawfiles,\n        action.values\n      ],\n    })\n  }\n\n  else if(action.type===SUBMIT_MEDICAL_FORM){\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    //check if there's any previous posts for this pet. How we handle adding the new post depends on this.\n    let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n\n    if(previousPosts){\n      pawfileToUpdate.posts = [...pawfileToUpdate.posts, action.values];\n    }\n    else{\n      pawfileToUpdate.posts = [action.values];\n    }\n\n    //check if there's any previous vaccinations, prescriptions, etc. for this pet. How we handle adding the new ones depends on this.\n    if(action.values.vaccinations)\n    {\n      let vaccinationList = action.values.vaccinations.map(vaccination=>{\n        return {name: vaccination, date: action.values.date}\n      })\n\n      let previousVaccinations = pawfileToUpdate.vaccinations  ? [...pawfileToUpdate.vaccinations ] : '';\n\n      if(previousVaccinations){\n        pawfileToUpdate.vaccinations = [...pawfileToUpdate.vaccinations, ...vaccinationList];      \n      }\n      else{\n        pawfileToUpdate.vaccinations = [...vaccinationList];\n      }\n    }\n\n    if(action.values.prescriptions)\n    {\n      let prescriptionList = action.values.prescriptions.map(prescription=>{\n        return {name: prescription, date: action.values.date}\n      })\n\n      let previousPrescriptions = pawfileToUpdate.prescriptions  ? [...pawfileToUpdate.prescriptions ] : '';\n\n      if(previousPrescriptions){\n        pawfileToUpdate.prescriptions = [...pawfileToUpdate.prescriptions, ...prescriptionList];\n     \n      }\n      else{\n        pawfileToUpdate.prescriptions = [...prescriptionList];\n      }\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.currentPetId ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type===SUBMIT_MEMORY_FORM){\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    let previousPosts = pawfileToUpdate.posts ? [...pawfileToUpdate.posts] : '';\n\n    if(previousPosts){\n      pawfileToUpdate.posts = [...pawfileToUpdate.posts, action.values];\n    }\n    else{\n      pawfileToUpdate.posts = [action.values];\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.currentPetId ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type===DELETE_PAWFILE){\n    const newArrayOfPawfiles = state.pawfiles.filter((item)=> (item.id!==action.currentPetId));\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles,\n    })\n  }\n\n  else if (action.type=== ADDING_NEW_REMINDER){\n    const newReminder = action.values;\n\n    //create a new obj -this was the problem (I was directly mutating state)\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    let previousReminders = pawfileToUpdate.reminders ? [...pawfileToUpdate.reminders] : '';\n\n    //\n    if(previousReminders){\n      pawfileToUpdate.reminders=[...pawfileToUpdate.reminders, newReminder];\n    }\n    else{\n      pawfileToUpdate.reminders=[newReminder];\n    }\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.currentPetId ? pawfileToUpdate : item))\n\n    return Object.assign({}, state, {\n        pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if(action.type=== DELETE_REMINDER){\n    let pawfileToUpdate = {...state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId)};\n\n    const updatedReminders = pawfileToUpdate.reminders.filter((reminder)=> (reminder.id!==action.reminderId));\n\n    pawfileToUpdate.reminders=updatedReminders;\n\n    const updatedPawfile = Object.assign({}, state.pawfiles.find(pawfile=> pawfile.id==action.currentPetId), {\n      pawfileToUpdate\n    })\n\n    console.log('updatedPawfile is', updatedPawfile)\n\n    const newArrayOfPawfiles = state.pawfiles.map((item)=> (item.id===action.currentPetId ? updatedPawfile : item))\n\n    return Object.assign({}, state, {\n      pawfiles: newArrayOfPawfiles\n    })\n  }\n\n  else if (action.type=== CHANGE_SORTING_PETS_METHOD){\n    return Object.assign({}, state, {\n      sortingPetsMethod: action.sortMethod,\n    })\n  }\n\n  else if (action.type===TOGGLE_NAVBAR){\n    if(action.bool===true || action.bool===false){\n      return Object.assign({}, state, {\n        toggleNavbar: action.bool,\n      })\n    }\n    return Object.assign({}, state, {\n      toggleNavbar: !state.toggleNavbar,\n    })\n  }\n\n  else if(action.type===CHANGE_CURRENT_PET_ID){\n    console.log('changing id', action.currentPetId);\n    return Object.assign({}, state, {\n      currentPetId: action.currentPetId\n    })\n  }\n\n  else if(action.type===SHOW_MEDICAL_FORM){\n    return Object.assign({}, state, {\n      showMedicalForm: action.bool\n    })\n  }\n\n  else if(action.type===SHOW_MEMORY_FORM){\n    return Object.assign({}, state, {\n      showMemoryForm: action.bool\n    })\n  }\n\n  else if(action.type===CHANGE_SEARCH_TERM){\n    return Object.assign({}, state, {\n      currentSearchTerm: action.searchTerm,\n    })\n  }\n\n  else if(action.type===CHANGE_CATEGORY_FILTER){\n    return Object.assign({}, state, {\n      categoryFilter: action.categoryFilter,\n    })\n  }\n\n  return state;\n}"]},"metadata":{},"sourceType":"module"}