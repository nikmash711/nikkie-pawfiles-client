{"ast":null,"code":"import { API_BASE_URL } from '../config';\n/* GENERAL */\n\nexport var CHANGE_PAWFILES_PENDING = \"CHANGE_PAWFILES_PENDING\";\nexport var changePawfilesPending = function changePawfilesPending(bool) {\n  return {\n    type: CHANGE_PAWFILES_PENDING,\n    bool: bool\n  };\n};\nexport var CHANGE_ERROR = \"CHANGE_ERROR\";\nexport var changeError = function changeError(bool) {\n  return {\n    type: CHANGE_ERROR,\n    bool: bool\n  };\n};\n/* GET ACTIONS */\n\nexport var FETCH_PAWFILES_SUCCESS = 'FETCH_PAWFILES_SUCCESS';\nexport var fetchPawfilesSuccess = function fetchPawfilesSuccess(pawfiles) {\n  return {\n    type: FETCH_PAWFILES_SUCCESS,\n    pawfiles: pawfiles\n  };\n};\nexport var FETCH_PAWFILES_REQUEST = \"FETCH_PAWFILES_REQUEST\";\nexport var fetchPawfilesRequest = function fetchPawfilesRequest() {\n  return {\n    type: FETCH_PAWFILES_REQUEST\n  };\n};\nexport var CRUD_ERROR = \"CRUD_ERROR\";\nexport var crudError = function crudError() {\n  return {\n    type: CRUD_ERROR\n  };\n};\nexport var fetchPawfiles = function fetchPawfiles() {\n  return function (dispatch) {\n    dispatch(fetchPawfilesRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/pawfiles\")).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      return res.json();\n    }).then(function (pawfiles) {\n      dispatch(fetchPawfilesSuccess(pawfiles));\n    }).catch(function (err) {\n      dispatch(crudError());\n    });\n  };\n};\n/* POST & PUT ACTIONS */\n\nexport var SUBMIT_PAWFILE_REQUEST = \"SUBMIT_PAWFILE_REQUEST\";\nexport var submitPawfileRequest = function submitPawfileRequest() {\n  return {\n    type: SUBMIT_PAWFILE_REQUEST\n  };\n};\nexport var SUBMIT_PAWFILE_SUCCESS = \"SUBMIT_PAWFILE_SUCCESS\";\nexport var submitPawfileSuccess = function submitPawfileSuccess(pawfile, currentPetId) {\n  return {\n    type: SUBMIT_PAWFILE_SUCCESS,\n    pawfile: pawfile,\n    currentPetId: currentPetId\n  };\n};\nexport var submitPawfile = function submitPawfile(values, currentPetId) {\n  return function (dispatch) {\n    //could be editing a pawfile or submitting it, it's the same form\n    var method = currentPetId ? \"PUT\" : \"POST\";\n    var path = currentPetId ? \"\".concat(API_BASE_URL, \"/pawfiles/\").concat(currentPetId) : \"\".concat(API_BASE_URL, \"/pawfiles\");\n    dispatch(submitPawfileRequest());\n    fetch(path, {\n      method: method,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(values)\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      return res.json();\n    }).then(function (pawfile) {\n      dispatch(submitPawfileSuccess(pawfile, currentPetId));\n    }).catch(function (err) {\n      dispatch(crudError());\n    });\n  };\n};\n/* DELETE ACTIONS */\n\nexport var DELETE_PAWFILE_SUCCESS = 'DELETE_PAWFILE_SUCCESS';\nexport var deletePawfileSuccess = function deletePawfileSuccess(currentPetId) {\n  return {\n    type: DELETE_PAWFILE_SUCCESS,\n    currentPetId: currentPetId\n  };\n};\nexport var DELETE_PAWFILE_REQUEST = \"DELETE_PAWFILE_REQUEST\";\nexport var deletePawfileRequest = function deletePawfileRequest() {\n  return {\n    type: DELETE_PAWFILE_REQUEST\n  };\n};\nexport var deletePawfile = function deletePawfile(currentPetId) {\n  return function (dispatch) {\n    dispatch(deletePawfileRequest());\n    fetch(\"\".concat(API_BASE_URL, \"/pawfiles/\").concat(currentPetId), {\n      method: \"DELETE\",\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(function (res) {\n      if (!res.ok) {\n        return Promise.reject(res.statusText);\n      }\n\n      console.log(\"HERE\");\n      console.log('successful deleting');\n      dispatch(deletePawfileSuccess(currentPetId));\n    }).catch(function (err) {\n      dispatch(fetchIndividualPawfileError(err));\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/actions/pawfile-crud.js"],"names":["API_BASE_URL","CHANGE_PAWFILES_PENDING","changePawfilesPending","bool","type","CHANGE_ERROR","changeError","FETCH_PAWFILES_SUCCESS","fetchPawfilesSuccess","pawfiles","FETCH_PAWFILES_REQUEST","fetchPawfilesRequest","CRUD_ERROR","crudError","fetchPawfiles","dispatch","fetch","then","res","ok","Promise","reject","statusText","json","catch","err","SUBMIT_PAWFILE_REQUEST","submitPawfileRequest","SUBMIT_PAWFILE_SUCCESS","submitPawfileSuccess","pawfile","currentPetId","submitPawfile","values","method","path","headers","body","JSON","stringify","DELETE_PAWFILE_SUCCESS","deletePawfileSuccess","DELETE_PAWFILE_REQUEST","deletePawfileRequest","deletePawfile","console","log","fetchIndividualPawfileError"],"mappings":"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","sourcesContent":["import {API_BASE_URL} from '../config';\n\n/* GENERAL */\nexport const CHANGE_PAWFILES_PENDING = \"CHANGE_PAWFILES_PENDING\";\nexport const changePawfilesPending = bool => ({\n    type: CHANGE_PAWFILES_PENDING,\n    bool\n})\n\nexport const CHANGE_ERROR = \"CHANGE_ERROR\";\nexport const changeError = bool => ({\n    type: CHANGE_ERROR,\n    bool\n})\n\n/* GET ACTIONS */\n\nexport const FETCH_PAWFILES_SUCCESS = 'FETCH_PAWFILES_SUCCESS';\nexport const fetchPawfilesSuccess = pawfiles => ({\n    type: FETCH_PAWFILES_SUCCESS,\n    pawfiles\n});\n\nexport const FETCH_PAWFILES_REQUEST = \"FETCH_PAWFILES_REQUEST\";\nexport const fetchPawfilesRequest = () => ({\n    type: FETCH_PAWFILES_REQUEST,\n})\n\n\nexport const CRUD_ERROR = \"CRUD_ERROR\";\nexport const crudError = () => ({\n  type: CRUD_ERROR,\n})\n\nexport const fetchPawfiles = () => dispatch => {\n    dispatch(fetchPawfilesRequest());\n    fetch(`${API_BASE_URL}/pawfiles`)\n        .then(res => {\n            if (!res.ok) {\n                return Promise.reject(res.statusText);\n            }\n            return res.json();\n        })\n        .then(pawfiles => {\n            dispatch(fetchPawfilesSuccess(pawfiles));\n        })\n        .catch(err => {\n            dispatch(crudError());\n        });\n};\n\n/* POST & PUT ACTIONS */\nexport const SUBMIT_PAWFILE_REQUEST = \"SUBMIT_PAWFILE_REQUEST\";\nexport const submitPawfileRequest = () => ({\n    type: SUBMIT_PAWFILE_REQUEST,\n})\n\nexport const SUBMIT_PAWFILE_SUCCESS = \"SUBMIT_PAWFILE_SUCCESS\";\nexport const submitPawfileSuccess = (pawfile, currentPetId) => ({\n    type: SUBMIT_PAWFILE_SUCCESS,\n    pawfile,\n    currentPetId\n})\n\nexport const submitPawfile = (values, currentPetId) => dispatch =>{\n    //could be editing a pawfile or submitting it, it's the same form\n    const method = currentPetId ? \"PUT\" : \"POST\";\n    const path = currentPetId ? `${API_BASE_URL}/pawfiles/${currentPetId}` : `${API_BASE_URL}/pawfiles`; \n\n    dispatch(submitPawfileRequest());\n    fetch(path, { \n        method: method,\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values)\n    })\n    .then(res => {\n        if (!res.ok) {\n            return Promise.reject(res.statusText);\n        }\n        return res.json();\n    }).then(pawfile => {\n        dispatch(submitPawfileSuccess(pawfile, currentPetId));\n    }).catch(err => {\n        dispatch(crudError());\n    });\n}\n\n\n/* DELETE ACTIONS */\nexport const DELETE_PAWFILE_SUCCESS = 'DELETE_PAWFILE_SUCCESS';\nexport const deletePawfileSuccess = (currentPetId) => ({\n    type: DELETE_PAWFILE_SUCCESS,\n    currentPetId\n})\n\nexport const DELETE_PAWFILE_REQUEST = \"DELETE_PAWFILE_REQUEST\";\nexport const deletePawfileRequest = () => ({\n    type: DELETE_PAWFILE_REQUEST,\n})\n\nexport const deletePawfile = (currentPetId) => dispatch =>{\n  dispatch(deletePawfileRequest());\n  fetch(`${API_BASE_URL}/pawfiles/${currentPetId}`, { \n      method: \"DELETE\",\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n      }\n  })\n  .then(res => {\n      if (!res.ok) {\n          return Promise.reject(res.statusText);\n      }\n      console.log(\"HERE\");\n      console.log('successful deleting');\n      dispatch(deletePawfileSuccess(currentPetId));\n  })\n  .catch(err => {\n      dispatch(fetchIndividualPawfileError(err));\n  });\n}"]},"metadata":{},"sourceType":"module"}