{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfilepage/reminder-form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { submitReminder } from '../../actions/reminder-crud';\nimport { showReminderForm } from '../../actions/index';\nimport { todaysDate } from '../helper-functions';\nimport './reminder-blurb.css';\nimport './reminder-form.css';\nexport var ReminderForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReminderForm, _React$Component);\n\n  function ReminderForm() {\n    _classCallCheck(this, ReminderForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReminderForm).apply(this, arguments));\n  }\n\n  _createClass(ReminderForm, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.dispatch(showReminderForm(false, undefined));\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault();\n      var values = {\n        note: this.noteInput.value,\n        date: this.dateInput.value\n      };\n      this.props.dispatch(submitReminder(values, this.props.currentPetId, this.props.currentReminderId));\n      this.noteInput.value = \"\";\n      this.dateInput.value = \"\";\n      this.props.dispatch(showReminderForm(false, undefined));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      console.log('individual reminder is', this.props.individualReminder);\n      return React.createElement(\"div\", {\n        className: \"reminder-form-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"new-reminder-form\",\n        onSubmit: function onSubmit(e) {\n          return _this.onSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        required: true,\n        className: \"new-reminder-note reminder-note\",\n        ref: function ref(input) {\n          return _this.noteInput = input;\n        },\n        type: \"text\",\n        id: \"new-reminder\",\n        name: \"note\",\n        placeholder: \"New reminder...\",\n        defaultValue: this.props.individualReminder ? this.props.individualReminder.note : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        required: true,\n        className: \"reminder-date\",\n        ref: function ref(input) {\n          return _this.dateInput = input;\n        },\n        type: \"date\",\n        defaultValue: this.props.individualReminder ? this.props.individualReminder.date : todaysDate(),\n        min: todaysDate(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"save-reminder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Save\"), React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this.props.dispatch(showReminderForm(false, undefined));\n        },\n        type: \"button\",\n        className: \"cancel-reminder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return ReminderForm;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  var currentReminderId = state.pawfile.currentReminderId;\n  var currentPetId = state.pawfile.currentPetId;\n  var individualPawfile = state.pawfile.pawfiles.find(function (pawfile) {\n    return pawfile.id == currentPetId;\n  });\n  console.log('in reminder-form mapstate, the currentPetId is', currentPetId);\n  return {\n    currentReminderId: state.pawfile.currentReminderId,\n    currentPetId: state.pawfile.currentPetId,\n    individualReminder: individualPawfile.reminders.find(function (reminder) {\n      return reminder.id == currentReminderId;\n    })\n  };\n}\n\nexport default connect(mapStateToProps)(ReminderForm);","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfilepage/reminder-form.js"],"names":["React","connect","submitReminder","showReminderForm","todaysDate","ReminderForm","props","dispatch","undefined","e","preventDefault","values","note","noteInput","value","date","dateInput","currentPetId","currentReminderId","console","log","individualReminder","onSubmit","input","Component","mapStateToProps","state","pawfile","individualPawfile","pawfiles","find","id","reminders","reminder"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {submitReminder} from '../../actions/reminder-crud';\nimport {showReminderForm} from '../../actions/index';\nimport {todaysDate} from '../helper-functions';\nimport './reminder-blurb.css';\nimport './reminder-form.css';\n\nexport class ReminderForm extends React.Component{\n  componentWillUnmount(){\n    this.props.dispatch(showReminderForm(false, undefined));\n  }\n\n  onSubmit(e){\n    e.preventDefault();\n    const values={note: this.noteInput.value, date: this.dateInput.value};\n    this.props.dispatch(submitReminder(values, this.props.currentPetId, this.props.currentReminderId));\n    this.noteInput.value = \"\";\n    this.dateInput.value=\"\";\n    this.props.dispatch(showReminderForm(false, undefined));\n  }\n  \n  render(){\n    console.log('individual reminder is', this.props.individualReminder);\n    return(\n      <div className=\"reminder-form-modal\">\n        <form className=\"new-reminder-form\" onSubmit={ (e)=> this.onSubmit(e)}>\n          <input required className=\"new-reminder-note reminder-note\" ref={input => this.noteInput = input} type=\"text\" id=\"new-reminder\" name=\"note\" placeholder=\"New reminder...\" defaultValue={this.props.individualReminder ? this.props.individualReminder.note : \"\"}/>\n\n          <input required className=\"reminder-date\" ref={input => this.dateInput = input} type=\"date\" defaultValue={this.props.individualReminder ? this.props.individualReminder.date : todaysDate()} min={ todaysDate()} />\n\n          <button type=\"submit\" className=\"save-reminder\">Save</button>\n\n          <button onClick={()=>this.props.dispatch(showReminderForm(false, undefined))} type=\"button\" className=\"cancel-reminder\">Cancel</button>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  let currentReminderId = state.pawfile.currentReminderId;\n  let currentPetId = state.pawfile.currentPetId;\n  let individualPawfile = state.pawfile.pawfiles.find(pawfile=>pawfile.id==currentPetId);\n\n  console.log('in reminder-form mapstate, the currentPetId is', currentPetId)\n\n  return {\n    currentReminderId: state.pawfile.currentReminderId,\n    currentPetId: state.pawfile.currentPetId,\n    individualReminder: individualPawfile.reminders.find(reminder=>reminder.id==currentReminderId)\n  }\n}\n\nexport default connect(mapStateToProps)(ReminderForm);"]},"metadata":{},"sourceType":"module"}