{"ast":null,"code":"import _classCallCheck from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfilepage/reminder-blurb.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Reminder from './reminder';\nimport { submitReminder } from '../../actions/reminder-crud';\nimport { showReminderForm } from '../../actions/index';\nimport ReminderForm from './reminder-form';\nimport { todaysDate } from '../helper-functions';\nimport './reminder-blurb.css';\nexport var ReminderBlurb =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReminderBlurb, _React$Component);\n\n  function ReminderBlurb() {\n    _classCallCheck(this, ReminderBlurb);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ReminderBlurb).apply(this, arguments));\n  }\n\n  _createClass(ReminderBlurb, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var reminders = this.props.reminders.map(function (reminder, index) {\n        return React.createElement(Reminder, Object.assign({\n          reminderId: reminder.id,\n          key: index\n        }, reminder, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"article\", {\n        className: \"blurb reminders\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Reminders\"), React.createElement(\"ul\", {\n        className: \"reminders-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, reminders, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this.props.dispatch(showReminderForm(true, undefined));\n        },\n        className: \"add-reminder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"+ Add New\"))), this.props.showReminderForm && React.createElement(ReminderForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ReminderBlurb;\n}(React.Component);\n\nfunction mapStateToProps(state) {\n  return {\n    showReminderForm: state.pawfile.showReminderForm,\n    currentReminderId: state.pawfile.currentReminderId\n  };\n}\n\nexport default connect(mapStateToProps)(ReminderBlurb);\n{\n  /* <button type=\"button\" className=\"more-options-button\" onClick={()=>this.toggleMoreOptions()}>More options</button> */\n}\n{\n  /* {this.state.showMoreOptions && \n  <div className=\"more-options\">\n   <input ref={input => this.dateInput = input} type=\"date\" max={todaysDate()}/>\n  </div>\n  } */\n}\n{\n  /* <button className=\"add-reminder-button\" type=\"submit\" onClick={(e)=>this.onSubmit(e)}>Add</button> */\n}\n{\n  /* Have the time/date option be hidden unless user clicks a button that says time/date, then display visible and keep the values and submit with form  */\n}\n{\n  /* <input type=\"date\" />\n  <input type=\"time\" /> */\n}","map":{"version":3,"sources":["/Users/nikkiemashian/Documents/Thinkful/Pawfiles/pawfiles/client/src/components/pawfilepage/reminder-blurb.js"],"names":["React","connect","Reminder","submitReminder","showReminderForm","ReminderForm","todaysDate","ReminderBlurb","reminders","props","map","reminder","index","id","dispatch","undefined","Component","mapStateToProps","state","pawfile","currentReminderId"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAAQC,cAAR,QAA6B,6BAA7B;AACA,SAAQC,gBAAR,QAA+B,qBAA/B;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAAQC,UAAR,QAAyB,qBAAzB;AACA,OAAO,sBAAP;AAEA,WAAaC,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAEU;AAAA;;AACN,UAAMC,SAAS,GAAG,KAAKC,KAAL,CAAWD,SAAX,CAAqBE,GAArB,CAAyB,UAACC,QAAD,EAAWC,KAAX;AAAA,eACzC,oBAAC,QAAD;AAAU,UAAA,UAAU,EAAED,QAAQ,CAACE,EAA/B;AAAmC,UAAA,GAAG,EAAED;AAAxC,WAAmDD,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADyC;AAAA,OAAzB,CAAlB;AAIA,aACE;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AAAI,QAAA,SAAS,EAAG,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,SADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,mBAAI;AAAC,UAAA,KAAI,CAACC,KAAL,CAAWK,QAAX,CAAoBV,gBAAgB,CAAC,IAAD,EAAOW,SAAP,CAApC;AAAuD,SAA7E;AAA+E,QAAA,SAAS,EAAC,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAFF,CAFF,EAQG,KAAKN,KAAL,CAAWL,gBAAX,IAA+B,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARlC,CADF;AAYD;AAnBH;;AAAA;AAAA,EAAmCJ,KAAK,CAACgB,SAAzC;;AAsBA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLd,IAAAA,gBAAgB,EAAEc,KAAK,CAACC,OAAN,CAAcf,gBAD3B;AAELgB,IAAAA,iBAAiB,EAAEF,KAAK,CAACC,OAAN,CAAcC;AAF5B,GAAP;AAID;;AAED,eAAenB,OAAO,CAACgB,eAAD,CAAP,CAAyBV,aAAzB,CAAf;AACA;AAAC;AAAyH;AAE1H;AAAC;;;;;AAII;AAEL;AAAC;AAAyG;AAC1G;AAAC;AAA0J;AAC3J;AAAC;;AACwB","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport Reminder from './reminder';\nimport {submitReminder} from '../../actions/reminder-crud';\nimport {showReminderForm} from '../../actions/index';\nimport ReminderForm from './reminder-form'\nimport {todaysDate} from '../helper-functions';\nimport './reminder-blurb.css';\n\nexport class ReminderBlurb extends React.Component{\n\n  render(){\n    const reminders = this.props.reminders.map((reminder, index)=>(\n      <Reminder reminderId={reminder.id} key={index} {...reminder}/>\n    ));\n\n    return(\n      <article className=\"blurb reminders\">\n        <h2>Reminders</h2>\n        <ul className = \"reminders-list\">\n          {reminders}\n          <li>\n            <button onClick={()=>{this.props.dispatch(showReminderForm(true, undefined))}} className=\"add-reminder\">+ Add New</button>\n          </li>\n        </ul>\n        {this.props.showReminderForm && <ReminderForm/>}\n      </article>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    showReminderForm: state.pawfile.showReminderForm,\n    currentReminderId: state.pawfile.currentReminderId\n  }\n}\n\nexport default connect(mapStateToProps)(ReminderBlurb);\n{/* <button type=\"button\" className=\"more-options-button\" onClick={()=>this.toggleMoreOptions()}>More options</button> */}\n\n{/* {this.state.showMoreOptions && \n<div className=\"more-options\">\n  <input ref={input => this.dateInput = input} type=\"date\" max={todaysDate()}/>\n</div>\n} */}\n\n{/* <button className=\"add-reminder-button\" type=\"submit\" onClick={(e)=>this.onSubmit(e)}>Add</button> */}\n{/* Have the time/date option be hidden unless user clicks a button that says time/date, then display visible and keep the values and submit with form  */}\n{/* <input type=\"date\" />\n<input type=\"time\" /> */}"]},"metadata":{},"sourceType":"module"}